[[PageOutline]]
[[Center(begin)]]
= '''HCLIM Version Control''' =
[[LastModified]]
[[Center(end)]]
For HCLIM development a version control system is used. For version <= HCLIM38 subversion is used. Starting with HCLIM43 git is used. 

== git (since HCLIM43) ==
In line with the NWP group development on HCLIM43 and beyond will be done in git.[[BR]]
As a general rule of thumb: try to stick to conventions used in the consortium for NWP development. Please carefully read:[[BR]]
* [HarmonieSystemDocumentation/SourceCodeRepository Git usage in HARMONIE]
* [HarmonieSystemDocumentation/SourceCodeRepositoryTutorial/FeatureDevelopment Kai's tutorial on feature development in HARMONIE]

Thanks to Kai, Ole and Daniel HCLIM has its own git repository hosted on hirlam.org: [source:HCLIM HCLIM git repository].[[BR]]
It was created from the Harmonie repository, just after [source:Harmonie@release-43h2.beta.6 release-43h2.beta.6] was tagged. Just after creation it only contained the develop branch. There is no connection to the HCLIM subversion repository and the development history on HCLIM in subversion is not visible in git any more, apart from modifications copied manually from svn to git.[[BR]]
Only David Lindstedt and the HIRLAM system core group currently have write access to the HCLIM repository. All others must develop via their user repositories as described on the [HarmonieSystemDocumentation/SourceCodeRepositoryTutorial/FeatureDevelopment HARMONIE feature development tutorial] and ask Bert or David to pull their mods in the HCLIM repository. All registered hirlam.org users have read access.

=== git work flow ===
[[Image(HCLIM_git_flow_20200302.png, 150px)]][[BR]]
The image above shows the planned work flow for HCLIM in git. To stay close to NWP development and participate in the HARMONIE testbed we should mirror the NWP ''Harmonie/develop'' branch in the HCLIM repository. The ''HCLIM_develop'' branch should only contain modifications that we never plan to send back to NWP. Ideally these would just be settings, like SIMULATION_TYPE=climate. Changes made on this branch can only be shared with NWP using cherry-picking which should be avoided as much as possible.[[BR]]
New features should be developed on branches created from the ''develop'' branch. From these feature branches modifications can then be merged into the ''develop'' and ''HCLIM_develop'' branches. Only really climate-specific features could be developed on branches created from the ''HCLIM_develop'' branch.

=== Important branches ===
* HCLIM/develop: identical to Harmonie/develop. Should be updated regularly to keep it in sync with NWP. Not tied to a cycle.
* HCLIM/HCLIM_develop: HCLIM specific development on top of HCLIM/develop. Should be in sync with HCLIM/develop. Not tied to a cycle.

=== git branch in your prompt ===
Always make sure you work on the correct branch! The following snippet will put the branch you have checked out in your bash prompt (Thanks to Roel Stappers):
{{{
parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
PS1="\[\e[1m\][\h]:\w\[\e[0m\]\[\033[33m\]\$(parse_git_branch)\[\033[00m\]\[\e[1m\]>\[\e[0m\] "
}}}
This will change your bash prompt into something like:[[BR]]
[[Image(branch_in_PS1.png)]]

=== Importing changes from NWP ===
Changes on the NWP Harmonie/develop branch can be pulled into HCLIM/develop branch using the steps below. This last step, pushing to the HCLIM repository on hirlam.org, can only be done by the HCLIM system people.
1. Get a local clone, if you don't have one yet:
{{{
git clone git@hirlam.org:HCLIM <any dir>/HCLIM
}}}
  <any dir> is the directory wherein the HCLIM directory will be put.
1. Go into the HCLIM local repository:
{{{
cd <any dir>/HCLIM
}}}
1. Add the NWP Harmonie repository as remote:
{{{
git remote add NWP git@hirlam.org:Harmonie
}}}
  Here, NWP is used as name for the remote.
1. Check the remote has been added:
{{{
git remote -v

NWP	git@hirlam.org:Harmonie (fetch)
NWP	git@hirlam.org:Harmonie (push)
origin	git@hirlam.org:HCLIM (fetch)
origin	git@hirlam.org:HCLIM (push)
}}}
1. Checkout the develop branch
{{{
git checkout develop
}}}
1. Pull the NWP develop changes into the local HCLIM develop branch
{{{
git pull NWP develop
}}}
  This should never give a conflict as HCLIM/develop should remain identical to Harmonie/develop.
1. Push the updated local HCLIM develop branch to HCLIM on hirlam.org
{{{
git push origin develop
}}}

=== Pushing changes towards NWP ===
Cherry-picking should be avoided whenever possible: see [http://www.draconianoverlord.com/2013/09/07/no-cherry-picking.html "If you cherry pick, your branch model is wrong"].
* Keep list of changes that we want to share with NWP, so we don't forget anything.
* From the start, code in such a way that changes can easily be shared with NWP, without interfering in their workflow


----


== subversion (pre HCLIM43) ==
For all development up to and including HCLIM38h1 [https://subversion.apache.org/ subversion] was used in the climate branch.
A short summary of the most important HCLIM branches in svn:
* [source:branches/climate branches/climate]: HCLIM branch below which all HCLIM svn code exists
* [source:branches/climate/HCLIM branches/climate/HCLIM]: not really used properly: official HCLIM release, currently still HCLIM38h1.1. 
* [source:branches/climate/HCLIM38h1.1 branches/climate/HCLIM38h1.1]: HCLIM version based on tag harmonie-38h1.1
* '''[source:branches/climate/38h1/HCLIM38h1 branches/climate/38h1/HCLIM38h1]: HCLIM version based on branch harmonie-38h1 (> harmonie-38h1.2).''' This is the most version currently used by must institutes (Feb 2020).
* [source:branches/climate/HCLIM38h1.1 branches/climate/projects]: HCLIM versions used in collaborative projects.
