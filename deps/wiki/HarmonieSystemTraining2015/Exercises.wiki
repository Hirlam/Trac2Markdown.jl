[[PageOutline]]
[[Center(begin)]]
=== '''Harmonie System Training''' ===
= '''Hands On Practice''' =


 ''' This page is still under construction'''

[[Center(end)]]

== Test data and preparations ==
* For download of files for harmonie-40h1.1.beta.3 see [wiki:Harmonie_40h1]
* For download of files for HCLIM-38h1.1 see [wiki:HarmonieClimate]
* Input data
 * The testbed data set including boundaries, observations, climate files and background statistics for assimilation can be downloaded [https://hirlam.org/portal/download/testbed/38h1/38h1.tar here].
* Verification data
 * vobs files, vfld files for AROME 38h1.1 and 38h1.2.beta.2 for 201401. [https://hirlam.org/portal/download/system_training/monitor_test_data.tar.gz Monitor data]
 * More data for verification can be found on {{{ ecgate:/scratch/ms/dk/nhz/oprint/ }}}
* Ubuntu specific
 * Ubuntu uses /bin/dash as default shell. This does not work with many of the Harmonie scripts, but the script [https://hirlam.org/trac/attachment/wiki/HarmonieSystemTraining2011/Exercises/sh2bash.sh sh2bash.sh] is a script to do convert /bin/sh to /bin/bash for you. Save the script and run it by:
{{{
./sh2bash.sh path-to-your-harmonie-check-out
}}}

=== Tools & Graphics ===

 * Output summary
  *[wiki:HarmonieSystemDocumentation/Forecast/Outputlist/38h1 Output variables and names]
  *[wiki:HarmonieSystemDocumentation/Forecast/Outputlist/40h1 Output variables and names]
 * [wiki:HarmonieSystemDocumentation/FileFormats Output formats]
  * If you would like to have NetCDF output files following HARMONIE standard names instead of climate model convention names you can replace "-nc " with "-ufn -nc " in scr/convertFA.
 * [wiki:HarmonieSystemDocumentation/PostPP/gl gl commands] for file inspection
 * Graphics
  * ncview on ecgb or bi
{{{
 module load ncview
 ncview FILENAME
}}}
  * Metview on ecgb:
   * Note 1: The old Metview 3 is still alive on ecgate so on ecgate users need to use '''metview4''' to open metview GUI or run macros.
   * Note 2: If you want to play with the GUI the "-desktop" option gives a nicer interface
   * Note 3: If your HARMONIE GRIB has centre identifier set to 233 (default) the following environment variable settings on ecgate may be useful:
{{{
export GRIB_DEFINITION_PATH=/home/ms/spsehlam/hlam/harmonie_release/tags/harmonie-38h1.2.beta.2/util/gl_grib_api/definitions:/usr/local/apps/grib_api/1.11.0/share/grib_api/definitions
export METVIEW_EXTRA_GRIB_DEFINITION_PATH=/home/ms/spsehlam/hlam/harmonie_release/tags/harmonie-38h1.2.beta.2/util/gl_grib_api/definitions
}}}
   * Now let's get going:
{{{ 
# load module metview ## I don't think this is needed on ecgate
cd $SCRATCH
rsync -vaux /scratch/ms/spsehlam/hlam/Training/metview .
cd metview/macros
vi README
## metview4 -desktop &                                    # Command to open GUI
metview4 -b macroName macroOption1 macroOption2 ...       # Command to run macro
metview4 -slog -b macroName macroOption1 macroOption2 ... # Command to run macro with debugging output
}}}
   * A set of example scripts are available. Check the macros/README file

  [[Image(HarmonieSystemTraining2014/Exercises:harplt.1.png, 20%)]]
  [[Image(HarmonieSystemTraining2014/Exercises:harxsect.1.png, 20%)]]


  * MetgraF
   * [http://netfam.fmi.fi/Museo/Riga/MetgraF/metg2.htm MetgraF]
   * on ecgb
{{{ 

cd $SCRATCH
rsync -vaux /scratch/ms/spsehlam/hlam/Training/metgraf

}}}
  A set of example scripts are available under the plot directory. Check the README file

  [[Image(HarmonieSystemTraining2014/Exercises:map_cloud_wind.png, 20%)]]
  [[Image(HarmonieSystemTraining2014/Exercises:map_T2M.png, 20%)]]
  [[Image(HarmonieSystemTraining2014/Exercises:cross_1.png, 20%)]] 
  [[Image(HarmonieSystemTraining2014/Exercises:cross_2.png, 20%)]]


   * elsewhere, you also need emoslib installed
{{{ 

svn co https://svn.hirlam.org/trunk/contrib/metgraf
gmake COMPILER=gfortran

}}}

== Experiments ==

 A few basic experiments has been setup to allow a quick start on either ECMWF or bi@NSC. Depending on your interest and targeted use of HARMONIE we have created both ALARO and AROME experiments and an example for how to nest AROME inside AROME. All experiments have been configured to run with precompiled binaries to save time. If you wish to run an experiment from scratch please check the example further down. The experiments are

 * HCLIM-38h1.1
  * [#RunningatestexampleforHCLIM38h1.1atECMWF ALARO 10km with ERA interim boundaries] at ECMWF
  * [#RunningatestexampleforHCLIM38h1.1onbiNSC ALARO 10km with ERA interim boundaries] at NSC

 * harmonie-40h1.1.beta.3
  * [#Runningatestexampleforharmonie-40h1.1.beta.3atECMWF AROME 2.5km with ERA interim boundaries] at ECMWF
  * [#Runningatestexampleforharmonie-40h1.1.beta.3onbiNSC AROME 2.5km with ERA interim boundaries] at NSC
  * [#Runninganestedexampleforharmonie-40h1.1.beta.3atECMWF AROME 2.0km with AROME 2.5km boundaries] at ECMWF
  * [#Runninganestedexampleforharmonie-40h1.1.beta.3onbiNSC AROME 2.0km with AROME 2.5km boundaries] at NSC

=== Running a test example for HCLIM38h1.1 at ECMWF ===

  A small (150x150) experiment domain with 10km resolution has been setup as a suitable example.
  Copy the experiment setup on ecgb

  {{{
   cd $HOME ; mkdir hm_home ; cd hm_home
   rsync -vaux /scratch/ms/spsehlam/hlam/Training/HCLIM_38h11_ALARO_10km .
   cd HCLIM_38h11_ALARO_10km
  }}}

  You find the definition of experiment domain here: {{{scr/Harmonie_domains.pm}}}. 

  {{{

   'TRAINING_10' =>{
      'TSTEP'  => '240',                                 # Time step
      'NLON'   => '150',                                 # Number of points (x)
      'NLAT'   => '150',                                 # Number of points (y)
      'LONC'   => '14.8',                                # Longitude of domain centre (degrees)
      'LATC'   => '51.9',                                # Latitude of domain center (degrees)
      'LON0'   => '20.0',                                # Reference longitude of the projection (degrees)
      'LAT0'   => '50.2',                                # Reference latitude of the projection (degrees)
      'GSIZE'  => '10000.',                               # Grid size in meters (x,y)
   },
  }}}

  Start the experiment by running a few days crossing a month ( feel free to pick your own dates )
  
  {{{
     ~hlam/harmonie_release/branches/climate/HCLIM38h1.1/config-sh/Harmonie start DTG=2014082700 DTGEND=2014090300
  }}}

 To save time this experiment will use pre-generated binaries ( check BINDIR in sms/config_exp.h)  To check what we have changed compared to the default HCLIM setup run e.g.

 {{{

   cd $HOME/hm_home/HCLIM_38h11_ALARO_10km # To make sure you are in the right directory 
   ~hlam/bin/mdiff sms

 }}}

=== Running a test example for HCLIM38h1.1 on bi@NSC ===

  A small (150x150) experiment domain with 10km resolution has been setup as a suitable example.
  Copy the experiment setup on bi

  {{{
   cd $HOME ; mkdir hm_home ; cd hm_home
   rsync -vaux /home/sm_psamu/hm_home/HCLIM_38h11_ALARO_10km .
   cd HCLIM_38h11_ALARO_10km
  }}}

  You find the definition of experiment domain here: {{{scr/Harmonie_domains.pm}}}. 

  {{{

   'TRAINING_10' =>{
      'TSTEP'  => '240',                                 # Time step
      'NLON'   => '150',                                 # Number of points (x)
      'NLAT'   => '150',                                 # Number of points (y)
      'LONC'   => '14.8',                                # Longitude of domain centre (degrees)
      'LATC'   => '51.9',                                # Latitude of domain center (degrees)
      'LON0'   => '20.0',                                # Reference longitude of the projection (degrees)
      'LAT0'   => '50.2',                                # Reference latitude of the projection (degrees)
      'GSIZE'  => '10000.',                               # Grid size in meters (x,y)
   },
  }}}

  Start the experiment by running a few days crossing a month ( ask for available periods )
  
  {{{
     /home/harmonie/branches/climate/HCLIM38h1.1/config-sh/Harmonie start DTG=2014082700 DTGEND=2014090300
  }}}

 To save time this experiment will use pre-generated binaries ( check BINDIR in sms/config_exp.h)  To check what we have changed compared to the default HCLIM setup run e.g.

 {{{

   cd $HOME/hm_home/HCLIM_38h11_ALARO_10km # To make sure you are in the right directory 
   ~sm_uandr/bin/mdiff sms

 }}}

=== Running a test example for harmonie-40h1.1.beta.3 at ECMWF ===

  A small (150x150) experiment domain with 2.5km resolution has been setup as a suitable example.
  Copy the experiment setup on ecgb

  {{{
   cd $HOME ; mkdir hm_home ; cd hm_home
   rsync -vaux /scratch/ms/spsehlam/hlam/Training/HCLIM_40h11b3_AROME_2_5km .
   cd HCLIM_40h11b3_AROME_2_5km
  }}}

  Define your own domain by editing {{{scr/Harmonie_domains.pm}}}.
  (An online tool for selecting your domain is found [https://www.hirlam.org/nwptools/domain.html here]).

  Start the experiment by running a few days crossing a month ( feel free to pick your own dates )
  
  {{{
     ~hlam/harmonie_release/tags/harmonie-40h1.1.beta.3/config-sh/Harmonie start DTG=2014082700 DTGEND=2014090300
  }}}

 To save time this experiment will use pre-generated binaries ( check BINDIR in sms/config_exp.h)  To check what we have changed compared to the default HCLIM setup run e.g.

 {{{

   cd $HOME/hm_home/HCLIM_38h11_ALARO_10km # To make sure you are in the right directory 
   ~hlam/bin/mdiff sms

 }}}

=== Running a test example for harmonie-40h1.1.beta.3 on bi@NSC ===

  A small (150x150) experiment domain with 2.5km resolution has been setup as a suitable example.
  Copy the experiment setup on bi

  {{{
   cd $HOME ; mkdir hm_home ; cd hm_home
   rsync -vaux /nobackup/smhid10/sm_uandr/Harmonie_training_2015/HCLIM_40h11b3_AROME_2_5km .
   cd HCLIM_40h11b3_AROME_2_5km
  }}}

  Define your own domain by editing {{{scr/Harmonie_domains.pm}}}.
  (An online tool for selecting your domain is found [https://www.hirlam.org/nwptools/domain.html]).

  If your group id on bi@NSC is rossby you need to modify {{{Env_system}}}. Please change 

  {{{
     export HM_DATA=/nobackup/smhid10/$USER/hm_home/$EXP
  }}}

  to

 {{{
     export HM_DATA=/nobackup/rossby18/$USER/hm_home/$EXP
  }}}

  Start the experiment by running a few days crossing a month ( ask for available data )
  
  {{{
     /home/harmonie/tags/harmonie-40h1.1.beta.3/config-sh/Harmonie start DTG=2014082700 DTGEND=2014090300
  }}}

 To save time this experiment will use pre-generated binaries ( check BINDIR in sms/config_exp.h)  To check what we have changed compared to the default HCLIM setup run e.g.

 {{{

   cd $HOME/hm_home/HCLIM_38h11_ALARO_10km # To make sure you are in the right directory 
   ~sm_uandr/bin/mdiff sms

 }}}


=== Running a nested example for harmonie-40h1.1.beta.3 at ECMWF ===

  A small (150x150) experiment domain with 2km resolution that fits into HCLIM_40h11b3_AROME_2_5km has been setup as a suitable example.
  Copy the experiment setup on ecgb

  {{{
   cd $HOME ; mkdir hm_home ; cd hm_home
   rsync -vaux /scratch/ms/spsehlam/hlam/Training/HCLIM_40h11b3_AROME_2km .
   cd HCLIM_40h11b3_AROME_2km
  }}}

  Define your own domain by editing {{{scr/Harmonie_domains.pm}}}.
  (An online tool for selecting your domain is found [https://www.hirlam.org/nwptools/domain.html here]).

  Start the experiment by running a few days crossing a month ( feel free to pick your own dates )
  
  {{{
     ~hlam/harmonie_release/tags/harmonie-40h1.1.beta.3/config-sh/Harmonie start DTG=2014082700 DTGEND=2014090300
  }}}

 To save time this experiment will use pre-generated binaries ( check BINDIR in sms/config_exp.h)  To check what we have changed compared to the default HCLIM setup run e.g.

 {{{

   cd $HOME/hm_home/HCLIM_40h11b3_AROME_2km # To make sure you are in the right directory 
   ~hlam/bin/mdiff sms

 }}}

=== Running a nested example for harmonie-40h1.1.beta.3 on bi@NSC ===

  A small (150x150) experiment domain with 2km resolution that fits into HCLIM_40h11b3_AROME_2_5km has been setup as a suitable example.
  Copy the experiment setup on bi

  {{{
   cd $HOME ; mkdir hm_home ; cd hm_home
   rsync -vaux /scratch/ms/spsehlam/hlam/Training/HCLIM_40h11b3_AROME_2km .
   rsync -vaux /nobackup/smhid10/sm_uandr/Harmonie_training_2015/HCLIM_40h11b3_AROME_2km .
   cd HCLIM_40h11b3_AROME_2km
  }}}

  Define your own domain by editing {{{scr/Harmonie_domains.pm}}}. 
  (An online tool for selecting your domain is found [https://www.hirlam.org/nwptools/domain.html here]).

  Start the experiment by running a few days crossing a month ( ask for available data )
  
  {{{
     ~hlam/harmonie_release/tags/harmonie-40h1.1.beta.3/config-sh/Harmonie start DTG=2014082700 DTGEND=2014090300
  }}}

 To save time this experiment will use pre-generated binaries ( check BINDIR in sms/config_exp.h)  To check what we have changed compared to the default HCLIM setup run e.g.

 {{{

   cd $HOME/hm_home/HCLIM_40h11b3_AROME_2km # To make sure you are in the right directory 
   ~hlam/bin/mdiff sms   # or e.g. scr

 }}}

=== Prepare and experiment from scratch ===

 For the standard procedure to start an experiment please check the  [wiki:HarmonieSystemDocumentation/Harmonie-mSMS main documentation]

=== Various topics ===

 * Select from a list of proposed configuration options to configure an experiment
 * run 1 to 2 experiment cycles
 * examine and diagnose results
   * monitoring ongoing runs via mXCDp interface.
     * Halt, resume, kill, resubmit a task.
   * find input and output data
   * study run logs
      * resource consumptions, profiling information...
 * '''[https://hirlam.org/trac/wiki/HarmonieSystemDocumentation/Harmonie-mSMS Documentation]'''
 * Inspect the namelists
 {{{
   SOME_PATH/Harmonie co nam/harmonie_namelists.pm # For atmospheric namelists
   SOME_PATH/Harmonie co nam/surfex_namelists.pm # For surfex namelists
 }}}
 To see that namelist settings used for your experiment check $HM_DATA/archive/log/HM_Date_YYYYMMDDHH.html and search for fort.4 and EXSEG1.nam.

=== SURFEX related exercise with focus on snow fraction ===

This experiment is an extension of "Running a test example for harmonie-40h1.1.beta.3" above.
Here you will modify a few subroutines which means that you must compile the code from scratch, i.e. in sms/config_exp.h set

 {{{
    BUILD=${BUILD-yes}
    BINDIR=${BINDIR-$HM_DATA/bin} 
 }}}

This will take a long time so be sure to find something else to do while the code compiles!!

Use the {{{Harmonie co}}} command on these files:

 {{{
nam/surfex_namelists.pm
nam/surfex_selected_output.pm
src/surfex/SURFEX/write_diag_misc_isban.F90
util/gl/inc/nc_tab.h
 }}}

We will investigate how snow fraction depends on the number of patches used. Thus, we increase the number of patches to 2. 
In surfex_namelists.pm, under the isba_3L options, add a namelist line which specify 2 patches instead of the default 1 patch, i.e. {{{NPATCH         => '2,',}}}

To get snow fraction per path in SURFEX output files (like ICMSHHARM+0081.sfx) we need to add an additional variable to surfex_selected_output.pm:

 {{{
"PSN_P",
 }}}

which corresponds to PSN_P in file {{{util/gl/inc/nc_tab.h}}}. nc_tab.h is used when fa-files are converted to NetCDF-files.
Please note that the variable names used in the fa-files are quite different from those used for the corresponding NetCDF files. E.g. "PSN_ISBA" in fa-file
becomes "stl" as NetCDF file. The reason is that the NetCDF names tries to follow climate model output name conventions as far as possible. If you would like to have NetCDF output files following HARMONIE standard names instead of climate model convention names you can replace "-nc " with "-ufn -nc " in scr/convertFA.

Unfortunately the naming of fractional snow per patch in SURFEX subroutine write_diag_misc_isban.F90 does not correspond to nc_tab.h. Thus, please modify write_diag_misc_isban.F90 so it says:

 {{{
    !        3.2    Snow fractions
    !               --------------
    !
    YRECFM='PSNG_P'
    YCOMMENT='snow fraction per patch over ground '
    CALL WRITE_SURF(HPROGRAM,YRECFM,XDPSNG(:,:),IRESP,HCOMMENT=YCOMMENT)
    !
    YRECFM='PSNV_P'
    YCOMMENT='snow fraction per patch over vegetation'
    CALL WRITE_SURF(HPROGRAM,YRECFM,XDPSNV(:,:),IRESP,HCOMMENT=YCOMMENT)
    !
    YRECFM='PSN_P'
    YCOMMENT='total snow fraction per patch'
    CALL WRITE_SURF(HPROGRAM,YRECFM,XDPSN(:,:),IRESP,HCOMMENT=YCOMMENT)
    !
 }}}

Here you can see that you can also add to output fractional snow for ground and vegetation separately. Your wish! But, if you do add them you also have to complement nc_tab.h since it does not
include PSNG_P nor PSNV_P!

Since we have changed NPATCH from 1 to 2 it will affect both the SURFEX PGD and PREP steps. Thus, if you re-use an old experiment setup
be sure to remove any old PGD files before you submit the experiment again.

Now submit your modified experiment setup. Please make sure to adjust domain and/or time of experiment period so you have some snow to analyse!
Also be sure to keep the output from the original experiment with NAPTCH=1 so you can compare those results with the new one (if time and domain used
for the original experiment included snow of course).


=== Test if lake model FLake works in harmonie-40h1.1.beta.3 ===

The lake model FLake is used by default in HCLIM38h1.1 (see nam/surfex_namelists.pm). However, in cy40 it has not been tested yet.
There is in principal no reason why it shouldn't work but a few issues need to be solved. See differences between HCLIM38h1.1
and cy40 with respect to:

 * A modification was done in HCLIM38h1.1 to "Make sure that mixed layer depth is less than lake depth" for initial conditions. See start_lake_of.F90.
 * Cumulative surface energy budget components are missing in cy40. This affects several subroutines but look e.g. at subroutine diag_flake_initn.F90.
 * On bi@NSC, {{{$ompth_fc}}} in Env_submit had to be changed from 4 to 1. Otherwise, MASTERODB, with FLake activated in surfex_namelists.pm, crashed.
 * Links to GlobalLakeStatus, GlobalLakeDepth and to lake initial condition in file LAKE_LTA_NEW.nc need to be added to scr/Prepare_pgd  and scr/Prep_ini_surfex.
 * Additional variables are needed in the LFI/FA files conversion table, i.e. src/mse/module/sfxflddesc_mod.F90

== Postprocessing exercises ==

=== FULL-POS ===

[wiki:HarmonieSystemDocumentation/PostPP/Fullpos FULL-POS documentation] will hopefully help with the following exercise.
 * Exercise 1:Instructions to add extra FULL-POS parameters in the [source:tags/harmonie-40h1.1.beta.3/scr/Select_postp.pl Select_postp.pl] perl script to any of your experiments are detailed below.
   * On ecgate "check out" scr/Select_postp.pl:
{{{
cd $HOME/hm_home/YOUR_EXP
~hlam/harmonie_release/tags/harmonie-40h1.1.beta.3/config-sh/Harmonie co scr/Select_postp.pl
cp scr/Select_postp.pl scr/Select_postp.pl_original
}}}
   * Add ''u'' and ''v'' (only) on height above ground levels at 75m, 125m and 150m to the model output.
     * Hint 1: RFP3H will need to changed
     * Hint 2: namfpdyh_lev will need to be changed and namfpdyh_lev2 will need to be created to allow for extra ''u'' and ''v'' levels
   * Rerun a short period to test your changes:
{{{
~hlam/harmonie_release/tags/harmonie-40h1.1.beta.3/config-sh/Harmonie prod DTGEND=YYYYMMDDHH BUILD=no
}}}

=== gl ===
[wiki:HarmonieSystemDocumentation/PostPP/gl gl documentation] will hopefully help with the following exercises.

 * Exercise 2: Convert FA file (ICMSHHARM+0003, say) to GRIB with gl_grib_api à la Makegrib:
   * On cca or your PC choose a forecast FA file to convert to GRIB
   * Convert this file to GRIB1 using gl_grib_api
   * Use gl_grib_api or grib_ls to list the contents of your GRIB file

 * Exercise 3: Vertical interpolation with gl exercise (model levels --> pressure levels)
   * Use the forecast FA file from ''Exercise 2'' to convert to GRIB and carry out vertical interpolation
   * Output temperature on heights above ground at levels 1.0m, 1.5m, 2.0m, 2.5m and 3.0m only
   * Test impact of using  VINT_Z_ORDER=0 vs  VINT_Z_ORDER=1
     * Hint 1: Use lwrite_pponly= .TRUE.,
     * Hint 2: Use level type'heightAboveGroundHighPrecision',

 * Exercise 4: Horizontal interpolation with gl exercise (lambert --> rotated lat-lon)
   * Use the forecast FA file from ''Exercise 2'' to convert to GRIB and carry out horizontal interpolation
   * Use gl_grib_api to produce a 50x50 0.02° rotated lat-lon grid of data centred on Malmo (if you are using the MALMO domain)
     * Hint 1: Ole's domain tool may help: [https://www.hirlam.org/nwptools/domain.html https://www.hirlam.org/nwptools/domain.html]

 * Exercise 5: Extract set of grid-points with gl exercise:
   * Use the forecast FA file from ''Exercise 2'' to extract some grid-point information
   * Use gl_grib_api to extract 2m temperature for the following SYNOP locations: "LUND, SOL"; "MALMO"; "MALMO-STURUP"
     * Hint 1: Use [source:trunk/harmonie/util/gl_grib_api/scr/allsynop.list util/gl_grib_api/scr/allsynop.list] to get the lat/lon information

 * Exercise 6: Produce postprocessed parameters using gl
      * Use the forecast FA file from ''Exercise 2'' to produce some postprocessed parameters
      * Use gl_grib_api to produce ''Total precipitation'', '' Visibility'' from your model output file.
        * Hint 1: Have a look at [https://hirlam.org/trac/wiki/HarmonieSystemDocumentation/Forecast/Outputlist/38h1#Variablespostprocessedbygl HarmonieSystemDocumentation/Forecast/Outputlist/38h1#Variablespostprocessedbygl]

=== xtool ===

[https://hirlam.org/trac/browser/trunk/harmonie/util/gl/README learn to use gl/xtool for file conversion/manipulation]
  * Run a difference between to files and print the result on the screen
  * Compare the orography between to files with SAL. Change the thresholds
  * Make a analysis increment file for a month of RCR data
   * use xtool to manipulate fields
     * Print difference between to fields on the screen
     * Create accumulated differences 
     * Create a monthly average
     * Use SAL to compare different fields from different resolutions

=== fldextr/obsextr ===

   * use fldextr to extract model data for obs verification
   * use obsextr to extract observation data for obs verification
     * Run with and without station list

== MUSC ==

=== Install and run MUSC ===

  A setup is prepared on ecgb. To copy the setup do ( and have patience ... )

 {{{
   cd $SCRATCH
   rsync -vaux --exclude=.svn /scratch/ms/spsehlam/hlam/Training/harmonie_MUSC_cy40h1 .
   cd harmonie_MUSC_cy40h1
 }}}

 or on bi

 {{{
   cd /nobackup/rossby18/$USER
   rsync -vaux --exclude=.svn /nobackup/smhid10/sm_uandr/Harmonie_training_2015/harmonie_MUSC_cy40h1 .
   cd harmonie_MUSC_cy40h1
 }}}


 Follow the instructions from the Run step in the README_ecgb/README_bi file 

=== Exercise ===

 * Modification of cloud layer breakup in MUSC
   * [https://hirlam.org/trac/raw-attachment/wiki/HarmonieSystemTraining2015/Exercises/Harmonie_musc.pdf Instructions]
     * Scripts for extracting an plotting cloud fractions see
     {{{
         harmonie_MUSC_cy40h1/Extract_cloudfraction.ksh 
         harmonie_MUSC_cy40h1/Plot_cloud.ksh
     }}}
         
   
   * For more practical information about MUSC, please take a look at the [http://netfam.fmi.fi/muscwd11/ 2011 workshop page].

== Monitoring ==

 === Verification ===

     * Try the setup on ecgb available under

     {{{
       cd $SCRATCH 
       rsync -vaux /scratch/ms/spsehlam/hlam/Training/monitor .
     }}}

     or on bi

     {{{
       rsync -vaux /nobackup/smhid10/sm_uandr/Harmonie_training_2015/monitor .
     }}}

     * Run the veriifcation by

     {{{
       cd monitor/scr
       ./Run_verobs_all ./Env_exp_example_data 2>&1 | tee logfile
     }}}


     The result should look like this [https://hirlam.org/portal/smhi/Training2014/monitor_export]

     * Verify two experiments by using the Env_exp_example_data_2_exp as input
       *      The result should look like this [https://hirlam.org/portal/smhi/Training2014/monitor_2_exp_export]
     * use verobs to inter-compare different experiments to obs.
     * Play with different forecast lengths, areas parameters
     * Add a new area, change the map view, define a polygon
     * Remove the quality control, fix the quality control
     * Plot some single stations
     * Blacklist stations
     * Create new contingency tables
     * Create monthly averages for several months
     * Change the time window for time series
     * Play with the quality control

== Installation of HARMONIE model on LinuxPC ==

 * Should have been covered by the lecture

 * A config file suitable for a non-MPI build can be found in [source:tags/harmonie-40h1.1.beta.3/util/makeup/config.redhat70.gfortran482.nompi]

 * To build binaries for MUSC only do like
 {{{
    cd util/makeup
    ./build config.your_favorite
 }}}


[[Center(begin)]]
[wiki:../  Back to the main page of the HARMONIE system training 2015 page]

[wiki:HarmonieSystemDocumentation Back to the main page of the HARMONIE-System Documentation]
