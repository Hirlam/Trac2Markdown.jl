[[PageOutline]]

[[Center(begin)]]
== '''Hirlam System Documentation''' ==
= '''Assimilation of SYNOPS data''' =
[[Center(end)]]

[[Center(begin)]]
= Assimilation of SYNOP 10m wind data =
[[Center(end)]]

[[Center(begin)]]
= Assimilation of SYNOP 2M RH data =
[[Center(end)]]

= Introduction =

The 2mRH observation operator that currently exists in the HIRLAM assimilation system (Gustafsson et al.1999) is based on Monin-Obukhov similarity theory for the surface layer, following the method proposed by Geleyn (1988) to interpolate dry static energy and specific humidity. 
This observation operator makes use of the Richardson number (Ri) as an stability parameter and different analytical expressions for the vertical interpolation are used for the stable and unstable cases in the surface layer, so the procedure presents a discontinuity between the lowest model level and the surface at the neutral case, i.e. Ri=0.

By the time when this observation operator was developed, an older parametrization for the land surface processes was installed in the HIRLAM forecast model. But currently, this parametrization has been replaced by a mosaic scheme in which the land tiles follow the ISBA scheme. This fact has produced that the computation of model two meter relative humidity in the observation operator within the HIRLAM 3DVar assimilation system is not already valid. (TOUGH report D30 by Ridal and Navascués 2004). 

In order to allow the assimilation of surface relative humidity observations, new FORTRAN routines for a simple observation operator for two meter relative humidity (2mRH), the tangent linear and its adjoint have been coded and tested.  
This observation operator assumes that relative humidity is constant in the unstable surface layer, so 2mRH can be directly compared to relative humidity at the lowest model level, RHNLEV. The smaller coupling between the near surface and the uppermost atmosphere in stable case is taken into account by increasing substantially the observation error. So, it produces the 2mRH observations to have no weight in the upper air analysis in this case.

Relative humidity depends on specific humidity q, pressure P, and temperature T, through vapour pressure e(q,P) and saturation vapour pressure Es(T). The Bolton’s formula is used for saturation vapour pressure equation. In this formulation, the model 2mRH is approached in the unstable surface layer by the relative humidity at the lowest model level RHNLEV at each observation site.

In the HIRLAM 3DVar, the horizontal resolution of the assimilation increment is smaller than the full model state due to the adopted incremental formulation. To calculate the interpolated values corresponding to analysis increments, a tangent-linear of observation operator has been created, that is the linearization of the non-linear observation operator around the background field.

In unstable surface layer (Ri<0) the error of this new simple observation operator is well below 10%, within the assumed observation error value. In the stable case (Ri>0), a direct comparison of model relative humidity at the lowest model level against the observations will be much less accurate, producing errors of observation operator up to 60%. In these cases, the lowest model level is much more uncoupled with the surface and then, humidity information contained in observations at 2m will not be useful to correct the atmosphere aloft.

The new observation operator, its adjoint, and its tangent linear have been coded and introduced in the HIRLAM 3DVar assimilation system.
Observation error variance for 2mRH assimilation have been assigned similarly to radiosonde observations. An empirical regression of errors of relative humidity dependent on temperature is being used (Lindskog et al., 2001). It produces values of 2mRH error standard deviation around 10% over Europe in spring time.

The 2mRH background error standard deviation can be estimated using a Monte Carlo technique installed as option within (Schyberg et al 2003) the HIRLAM 3D-Var assimilation code that follows the method suggested by Fisher and Courtier (1995). 

A set of random perturbations with Gaussian distribution N(0,1) for the elements of control vector ξ are generated followed by a transformation to model space δx.  For each model space perturbation δx, the tangent linear of the new observation operator for 2mRH is applied to obtain the model perturbation in terms of observed variable. This method produces an average background error standard deviation of 2mRH around 7% over land.

The observation error to background error ratio for 2mRH has been also separately estimated from the HIRLAM surface analysis innovations. The obtained sigmao to sigmab ratio value for the error statistics calculated from the HIRLAM surface analysis at daytime is smaller than those used in the HIRLAM upper air variational assimilation system. 
This new observation operator for 2mRH, the tangent linear and its adjoint have been tested in a series of parallel experiments over one month long period in spring 2004, as it is described in TOUGH reports D32 and D46 by  Sánchez and Navascués  2005.


= Changes description =

The directories affected by the new code are:
- Scripts
- Prepobs
- Obop

=== '''A) scripts directory:''' ===

These two scripts affected are Env_expdesc and VARinput.

 * '''Env_expdesc:''' 
	A logical variable has been added to choose if you want to assimilate 2m SYNOP RH observations or not (no is by default):

{{{
...
Modified: trunk/hirlam/scripts/Env_expdesc
==============================================================================
--- trunk/hirlam/scripts/Env_expdesc	(original)
+++ trunk/hirlam/scripts/Env_expdesc	Thu Oct 19 13:26:05 2006
@@ -52,6 +52,7 @@
 PRESCAT=no          # apply PRESCAT
 ATOVS=yes           # use ATOVS AMSU-A data ( yes or no)
 LWIND10M=no         # use of 10m SYNOP wind  (yes or no)
+LRH2M=no            # use of 2m SYNOP RH  (yes or no)
 RTTOVVERSION=7      # For VAR (5 or 7, but only 7 works)
 if [ $ANALYSIS = 4DVAR -a "$JCDFI" = yes ]
 then
...
}}}

 * '''VARinput:''' 

	Four sets related to RH2m observations:

1)	[ "$LRH2M" = "yes" ] && lrh2m=.t.

2)	LSYNOPRH2=${lrh2m} at prepobstypes.dat

3)   LLSYNOP=.TRUE.
	       LSYNOPRH2=${lrh2m}, at minobstypes.dat

4)	lsynopchkredrh2m=${lrh2m}, at screen.dat.

If the LSYNOPRH2 were set to true at prepobstypes.dat but to false at minonstypes.dat then RH2m observations would be assimilated but passively. 
lsynopchkredrh2m=.true. is to activate the redundancy check for these observations.

{{{
...
Modified: trunk/hirlam/scripts/VARinput
==============================================================================
--- trunk/hirlam/scripts/VARinput	(original)
+++ trunk/hirlam/scripts/VARinput	Thu Oct 19 13:26:05 2006
@@ -51,6 +51,8 @@
 # Use of SYNOP 10m wind observation with whitelist
 lw10m=.f.
 [ "$LWIND10M" = "yes" ] && lw10m=.t.
+lrh2m=.f.
+[ "$LRH2M" = "yes" ] && lrh2m=.t.

 # Compute default size of extended area
 MAXFACT235711=${MAXFACT235711-"99,2,1,0,0"}
@@ -141,7 +143,7 @@
                 LSYNOPu10=${lw10m},
                 LSYNOPv10=${lw10m},
                 LSYNOPT2=.FALSE.,
-                LSYNOPRH2=.FALSE.,
+                LSYNOPRH2=${lrh2m},
                 LLSHIP  =.TRUE.,
                 LSHIPu=.FALSE.,
                 LSHIPv=.FALSE.,
@@ -182,26 +184,16 @@
 EOF
 fi

-if [ "$LWIND10M" = "yes" ]; then
- if [ -s $privdir/minobstypes.dat ]; then
+if [ -s $privdir/minobstypes.dat ]; then
   cp $privdir/minobstypes.dat .
- else
+else
   cat >minobstypes.dat <<EOF
  &obstypes
     LSYNOPu10=${lw10m},
     LSYNOPv10=${lw10m},
+    LSYNOPRH2=${lrh2m},
  $NAMLIS_E
 EOF
- fi
-else
- if [ -s $privdir/minobstypes.dat ]; then
-  cp $privdir/minobstypes.dat .
- else
-  cat >minobstypes.dat <<EOF
- &obstypes
- $NAMLIS_E
-EOF
- fi
 fi

 if [ "$LWIND10M" = "yes" ]; then
@@ -226,25 +218,9 @@
    fi
 fi

-if [ "$LWIND10M" = "yes" ]; then
- if [ -s $privdir/screen.dat ]; then
+if [ -s $privdir/screen.dat ]; then
   cp $privdir/screen.dat .
- else
-  cat >screen.dat <<EOF
- &scrnam
-    lshipchkrdbflag=.false.,
-    lairepreddp=.true.,
-    airepdeltap=5000.,
-    lsynopchkfgsuv10m=.true.,
-    lsynopchkreduv10m=.true.,
-    synopw10mchklim=0.0,0.0,0.0
- $NAMLIS_E
-EOF
- fi
 else
- if [ -s $privdir/screen.dat ]; then
-  cp $privdir/screen.dat .
- else
   cat >screen.dat <<EOF
  &scrnam
     rtmbxsize=0.3,0.6,0.9,
@@ -253,10 +229,13 @@
     rtmchkmultichmax=2,
     lshipchkrdbflag=.false.,
     lairepreddp=.true.,
-    airepdeltap=5000.
+    airepdeltap=5000.,
+    lsynopchkfgsuv10m=${lw10m},
+    lsynopchkreduv10m=${lw10m},
+    lsynopchkredrh2m=${lrh2m},
+    synopw10mchklim=0.0,0.0,0.0
  $NAMLIS_E
 EOF
- fi
 fi

 $MAKE -f $HL_LIB/hirlam/data/hirvda/strfun_data/Makefile
$JBSTRFUN${NLEV}_stats.dat ||
...
}}}

=== '''B) prepobs directory:''' ===


 * '''prepare_synop_work.F:'''

The changes made in this routine have been:

1) Richardson number declaration and initialization.

{{{
...
Modified: trunk/hirlam/prepobs/prepare_synop_work.F
==============================================================================
--- trunk/hirlam/prepobs/prepare_synop_work.F	(original)
+++ trunk/hirlam/prepobs/prepare_synop_work.F	Thu Oct 19 13:26:05 2006
@@ -118,6 +118,7 @@
      x     RH2_bg(nobsh_sub),
      x     u10_bg(nobsh_sub),
      x     v10_bg(nobsh_sub)
+      real zri(nobsh_sub)
       logical lsea(nobsh_sub)
 !
 !     Copies of background fields,
@@ -182,6 +183,7 @@
          rh2_bg(jobsh)=0.0
          u10_bg(jobsh)=0.0
          v10_bg(jobsh)=0.0
+         zri(jobsh)=0.0
          fissigmab(jobsh)=rmdi
       end do
...
}}}

2)	In case of LRH2M set to true, call of newrh2obs.F routine after the call of tq2uv10obs.F, in order to get new values of RH2_bg.

{{{
...
@@ -269,7 +271,8 @@
 !     Interpolate, if required, 10 meter wind, 2 meter temperature
 !     and 2 meter relative humidity
 !
-      if( Luv10.or. LT2 .or. LRH2 ) then
+!     if( Luv10. or. LT2 .or. LRH2 ) then
+      if( LRH2 ) then
          do jobsh=1,totobs_sub
             lsea(jobsh) = .false.
          end do

@@ -277,8 +280,15 @@
      $        u_bg,v_bg,T_bg,q_bg,presh_bg,lnph_bg,
      $        ts_bg,rough_bg,sn_bg,sw_bg,
      $        tsea_bg,lsea,rousea_bg,
-     $        T2_bg,RH2_bg,u10_bg,v10_bg)
+     $        T2_bg,RH2_bg,u10_bg,v10_bg,zri)
+      endif
+
+      if( LRH2 ) then
+         call newrh2obs(nobsh_sub,totobs_sub,nlev,
+     $        T_bg,q_bg,presf_bg,
+     $        RH2_bg)
       endif
+
...
}}}

3) Introduction of the condition that if Richardson number zri is higher than -0.5, then the RH2m observation error value synoprh2mobserror is set to 0.7

{{{
...
!     Add model orography and fraction of land to cma-reports
 !
@@ -338,8 +348,14 @@
      $           RH2_bg(jobsh)
             synop_rh2mbgerr(iobcount+jobsh)=
      $           RH2sigmab(jobsh)
+
+          if(zri(jobsh).gt.-0.5)then
+           synop_rh2mobserr(iobcount+jobsh)=0.7
+          endif
+
          enddo
       endif
+
       if( LRH2.and.lanacalc ) then
          do jobsh=1,totobs_sub
             synop_rh2moban(iobcount+jobsh)=
@@ -400,3 +416,391 @@
       return
       end
...
}}}

4)Introduction of newrh2obs.F routine.

{{{
...
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c Library:obop $RCSfile: newrh2obs.F,v $, $Revision$
+c checked in by $Author$ at $Date$
+c $State: Exp $, $Locker:  $
+c $Log: newrh2obs.F,v $
+c
+c RCS introduced in hirvda.
+c
+C<A NAME="header">
+      SUBROUTINE NEWRH2OBS(NOBSH,TOTOBS,NLEV,
+c - INPUT
+     &           T_BG,Q_BG,PRESF_BG,
+c - OUTPUT 1D
+     &           RH2_BG)
+
+      IMPLICIT NONE
+
+c  -----------------
+c  NEWRH2OBS.F
+c  -----------------
+c  Computation of surface characteristics and surface exchange coefficients
+c  Relative moisture
+c  at standard meteorological levels.
+c
+c
+c  NOBSH   : Dimension of arrays
+c  TOTOBS  : Number of observations
+c  NLEV    : Number of vertical levels
+c
+c
+c Authors: B.Navascues and J.Sanchez-Arriola
+c
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c Input and output variables
+
+c  -  Input
+
+      INTEGER NLEV,NOBSH,TOTOBS
+      REAL  T_BG(NOBSH,NLEV),Q_BG(NOBSH,NLEV),
+     &      PRESF_BG(NOBSH,NLEV)
+
+c  -  Output
+
+      REAL  RH2_BG(NOBSH)
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c Local declarations
+
+      INTEGER i,ipnt
+
+c  - Physical constants
+
+#include "CONFYS.h"
+
+      REAL   A(NOBSH),E(NOBSH),ET(NOBSH)
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+      real ep,epa,ab,ac,ad,ae
+      ep=0.622
+      epa=0.38
+      ab=273.16
+      ac=29.66
+      ad=6.11
+      ae=17.67
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c   Initialize
+c
+      do i=1,TOTOBS
+        A(i)=0.
+        E(i)=0.
+        ET(i)=0.
+      end do
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c  computation of RH2_BG(NOBSH)
+c
+      DO IPNT=1,TOTOBS
+
+         E(IPNT)=PRESF_BG(IPNT,NLEV)*Q_BG(IPNT,NLEV)/
+     &(ep+epa*Q_BG(IPNT,NLEV))
+
+         A(IPNT)=(T_BG(IPNT,NLEV)-ab)/(T_BG(IPNT,NLEV)-ac)
+         A(IPNT)=exp(A(IPNT)*ae)
+         ET(IPNT)=100*ad*A(IPNT)
+
+         RH2_BG(IPNT)=E(IPNT)/ET(IPNT)
+
+         IF(RH2_BG(IPNT).LT.0.)RH2_BG(IPNT)=0.
+         IF(RH2_BG(IPNT).GT.1.)RH2_BG(IPNT)=1.0
+
+      ENDDO
+
+      RETURN
+      END
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
...
}}}

5) Introduction of newrh2obs_tl.F routine
{{{
...
+
+c Library:obop $RCSfile: newrh2obs_tl.F,v $, $Revision$
+c checked in by $Author$ at $Date$
+c $State: Exp $, $Locker:  $
+c $Log: newrh2obs_tl.F,v $
+c ST+GFU: Use anemometer height for ships.
+c
+c
+c RCS introduced in hirvda.
+c
+
+C<A NAME="header">
+      SUBROUTINE NEWRH2OBS_TL(NOBSH,TOTOBS,NLEV,
+c - INPUT
+     &           T_BG,Q_BG,PRESF_BG,
+     &           T_TL,Q_TL,PRESF_TL,
+     &           RH2_BG,
+c - OUTPUT 1D
+     &           RH2_TL)
+
+      IMPLICIT NONE
+
+c  -----------------
+c  NEWRH2OBS_TL.F
+c  -----------------
+c  Relative moisture
+c  at standard meteorological levels.
+c
+
+c Authors:B.Navascues and J.Sanchez-Arriola
+c
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c Input and output variables
+
+c  - Input
+
+      INTEGER NLEV,NOBSH,TOTOBS
+      REAL    T_BG(NOBSH,NLEV),Q_BG(NOBSH,NLEV),
+     &        PRESF_BG(NOBSH,NLEV),
+     &        T_TL(NOBSH,NLEV),Q_TL(NOBSH,NLEV),
+     &        PRESF_TL(NOBSH,NLEV),
+     &        RH2_BG(NOBSH)
+
+c  - Output
+
+      REAL    RH2_TL(NOBSH)
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c Local declarations
+
+      INTEGER i,ipnt
+
+c  - Physical constants
+
+#include "CONFYS.h"
+
+c Defino mis vectores:
+      REAL   A(NOBSH),E(NOBSH),ET(NOBSH),A1(NOBSH),A2(NOBSH),A3(NOBSH)
+      REAL   A4(NOBSH),A5(NOBSH),A6(NOBSH)
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c   Functions
+c
+      real ep,epa,ab,ac,ad,ae
+      ep=0.622
+      epa=0.38
+      ab=273.16
+      ac=29.66
+      ad=6.11
+      ae=17.67
+
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c   Initialize
+c
+      do i=1,TOTOBS
+        A(i)=0.
+        A1(i)=0.
+        A2(i)=0.
+        A3(i)=0.
+        A4(i)=0.
+        A5(i)=0.
+        A6(i)=0.
+        E(i)=0.
+        ET(i)=0.
+      end do
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c  computation of RH2_TL(NOBSH)
+c
+      DO IPNT=1,TOTOBS
+
+       E(IPNT)=(PRESF_BG(IPNT,NLEV)*Q_BG(IPNT,NLEV))/
+     &(ep+(epa*Q_BG(IPNT,NLEV)))
+
+          A(IPNT)=(T_BG(IPNT,NLEV)-ab)/(T_BG(IPNT,NLEV)-ac)
+          A4(IPNT)=ae*A(IPNT)
+       ET(IPNT)=100*(ad*(exp(A4(IPNT))))
+
+       A1(IPNT)=Q_BG(IPNT,NLEV)/(ET(IPNT)*(ep+epa*Q_BG(IPNT,NLEV)))
+
+          A5(IPNT)=(ep+epa*Q_BG(IPNT,NLEV))
+          A6(IPNT)=epa*PRESF_BG(IPNT,NLEV)/(A5(IPNT)**2)
+       A2(IPNT)=(1/ET(IPNT))*((PRESF_BG(IPNT,NLEV)/A5(IPNT))-
+     &A6(IPNT))
+
+       A3(IPNT)=(E(IPNT)/ET(IPNT))*((ae*(T_BG(IPNT,NLEV)-ab)/
+     &((T_BG(IPNT,NLEV)-ac)**2))-(ae/(T_BG(IPNT,NLEV)-ac)))
+
+       RH2_TL(IPNT)=A1(IPNT)*PRESF_TL(IPNT,NLEV)
+       RH2_TL(IPNT)=RH2_TL(IPNT)+A2(IPNT)*Q_TL(IPNT,NLEV)
+       RH2_TL(IPNT)=RH2_TL(IPNT)+A3(IPNT)*T_TL(IPNT,NLEV)
+
+
+      ENDDO
+
+
+      RETURN
+      END

...
}}}

6) Introduction of newrh2obs_ad.F routine.
{{{
...
+c checked in by $Author$ at $Date$
+c $State: Exp $, $Locker:  $
+c $Log: tq2uv10obs_ad.F,v $
+c Revision 1.4  2002/01/31 10:44:42  ksm
+c RCS introduced in hirvda.
+c
+
+C<A NAME="header">
+      SUBROUTINE NEWRH2OBS_AD(NOBSH,TOTOBS,NLEV,
+c - INPUT
+     &       T_BG,Q_BG,PRESF_BG,
+     &       RH2NOE,
+c - INPUT LOGICAL
+     &       passive_rh2,
+c - OUTPUT
+     &       T_AD,Q_AD,PRESF_AD)
+
+c  ----------------
+c  NEWRH2OBS_AD.F
+c  -----------------
+c  Relative moisture
+c
+c  -
+c
+c  NOBSH   : Dimension of arrays
+c  TOTOBS   : Number of observations
+c  NLEV    : Number of vertical levels
+c
+c Authors: B.Navascues and J.Sanchez-Arriola
+c
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c Input and output variables
+
+      IMPLICIT NONE
+      INTEGER NLEV,NOBSH,TOTOBS
+      REAL    T_BG(NOBSH,NLEV),Q_BG(NOBSH,NLEV),
+     &        PRESF_BG(NOBSH,NLEV),
+     &        RH2NOE(NOBSH)
+      LOGICAL passive_rh2(NOBSH)
+      REAL    T_AD(NOBSH,NLEV),
+     &        Q_AD(NOBSH,NLEV),PRESF_AD(NOBSH,NLEV)
+
+ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c Local declarations
+
+      INTEGER i,j,ipnt
+
+#include "CONFYS.h"
+
+      REAL  E(NOBSH),ET(NOBSH)
+      REAL  A(NOBSH),A4(NOBSH),A5(NOBSH),A6(NOBSH),A7(NOBSH)
+      REAL  E_AD(NOBSH),ET_AD(NOBSH)
+      REAL  C1(NOBSH),C2(NOBSH),C3(NOBSH)
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c  Functions
+c
+      real ep,epa,ab,ac,ad,ae
+      ep=0.622
+      epa=0.38
+      ab=273.16
+      ac=29.66
+      ad=6.11
+      ae=17.67
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c  INITIALIZE LOCAL CONSTANTS AND WORK ARRAYS WITH ZEROES
+
+      do i=1,TOTOBS
+        A(i)=0.
+        A4(i)=0.
+        A5(i)=0.
+        A6(i)=0.
+        A7(i)=0.
+        C1(i)=0.
+        C2(i)=0.
+        C3(i)=0.
+        E(i)=0.
+        ET(i)=0.
+      end do
+
+cCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
+c
+c  H2 Adj calculations
+
+      do i=1,TOTOBS
+        E_AD(i)=0.
+        ET_AD(i)=0.
+      end do
+
+
+      DO IPNT=1,TOTOBS
+
+        if ( .NOT.passive_rh2(IPNT) )then
+
+       E(IPNT)=(PRESF_BG(IPNT,NLEV)*Q_BG(IPNT,NLEV))/
+     &(ep+(epa*Q_BG(IPNT,NLEV)))
+
+          A(IPNT)=(T_BG(IPNT,NLEV)-ab)/(T_BG(IPNT,NLEV)-ac)
+          A4(IPNT)=ae*A(IPNT)
+       ET(IPNT)=100*(ad*(exp(A4(IPNT))))
+
+
+       E_AD(IPNT)=(RH2NOE(IPNT)/ET(IPNT))+E_AD(IPNT)
+
+       ET_AD(IPNT)=ET_AD(IPNT)-(E(IPNT)*RH2NOE(IPNT)/(ET(IPNT)**2))
+
+        endif
+      ENDDO
+
+cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
+c
+c  H1 Adj calculations
+
+      do i=1,TOTOBS
+        PRESF_AD(i,NLEV)=0.
+        Q_AD(i,NLEV)=0.
+        T_AD(i,NLEV)=0.
+      end do
+
+
+      DO IPNT=1,TOTOBS
+
+        if ( .NOT.passive_rh2(IPNT) )then
+
+
+          A5(IPNT)=(ep+epa*Q_BG(IPNT,NLEV))
+
+         C1(IPNT)=Q_BG(IPNT,NLEV)/A5(IPNT)
+
+          A6(IPNT)=epa*PRESF_BG(IPNT,NLEV)/(A5(IPNT)**2)
+         C2(IPNT)=PRESF_BG(IPNT,NLEV)/A5(IPNT)
+         C2(IPNT)=C2(IPNT)-A6(IPNT)
+
+          A7(IPNT)=(ae/(T_BG(IPNT,NLEV)-ac))-(ae*(T_BG(IPNT,NLEV)-ab)/
+     &((T_BG(IPNT,NLEV)-ac)**2))
+         C3(IPNT)=ET(IPNT)*A7(IPNT)
+
+
+         +   PRESF_AD(IPNT,NLEV)=(C1(IPNT)*E_AD(IPNT))+PRESF_AD(IPNT,NLEV)
+
+         Q_AD(IPNT,NLEV)=(C2(IPNT)*E_AD(IPNT))+Q_AD(IPNT,NLEV)
+
+         T_AD(IPNT,NLEV)=(C3(IPNT)*ET_AD(IPNT))+T_AD(IPNT,NLEV)
+
+       endif
+      ENDDO
+
+
+      RETURN
+      END
...
}}}

=== '''C) obop directory:''' ===

 * '''jograd_synop_work.F:'''

	The differences are:

1) Call to new routines newrh2obs.F and  newrh2obs_tl.F instead of tq2uv10obs.F and tq2uv10obs_tl.F , in case of assimilating RH2m observations( LRH2M, that here is LRH2, set to true):

{{{
...
 Modified: trunk/hirlam/obop/jograd_synop_work.F
==============================================================================
--- trunk/hirlam/obop/jograd_synop_work.F	(original)
+++ trunk/hirlam/obop/jograd_synop_work.F	Thu Oct 19 13:26:05 2006
@@ -443,30 +443,43 @@
 !     Interpolate 2 meter temperature, 2 meter relative humidity and
 !     10 meter wind from background and increment fields
 !
-      if( Luv10 .or. LT2 .or. LRH2 ) then
-         do jobsh=1,totobs_sub
-            lsea(jobsh) = .false.
-         end do
-         call tq2uv10obs(nobsh_sub,totobs_sub,nlev,
-     x        u_bg,v_bg,T_bg,q_bg,presh_bg,lnph_bg,
-     x                   ts_bg,rough_bg,sn_bg,sw_bg,
-     x                   tsea_bg,lsea,rousea_bg,
-     x                   T2_bg,RH2_bg,u10_bg,v10_bg)
-#ifdef TESTR2UV10
-#include "testr2uv102.h"
-#endif
-         call tq2uv10obs_tl(nobsh_sub,totobs_sub,nlev,
-     x                   u_bg,v_bg,T_bg,q_bg,presh_bg,lnph_bg,
-     x                   ts_bg,rough_bg,sn_bg,sw_bg,
-     x                   rousea_bg,tsea_bg,
-     x                   u_tl,v_tl,T_tl,q_tl,lnph_tl,
-     x                   T2_bg,RH2_bg,u10_bg,v10_bg,
-     x                   lsea,
-     x                   T2_tl,RH2_tl,u10_tl,v10_tl)
-#ifdef TESTR2UV10
-#include "testr2uv103.h"
-#endif
+!     if( Luv10 .or. LT2 .or. LRH2 ) then
+!        do jobsh=1,totobs_sub
+!           lsea(jobsh) = .false.
+!        end do
+!        call tq2uv10obs(nobsh_sub,totobs_sub,nlev,
+!    x        u_bg,v_bg,T_bg,q_bg,presh_bg,lnph_bg,
+!    x                   ts_bg,rough_bg,sn_bg,sw_bg,
+!    x                   tsea_bg,lsea,rousea_bg,
+!    x                   T2_bg,RH2_bg,u10_bg,v10_bg)
+!#ifdef TESTR2UV10
+!#include "testr2uv102.h"
+!#endif
+!        call tq2uv10obs_tl(nobsh_sub,totobs_sub,nlev,
+!    x                   u_bg,v_bg,T_bg,q_bg,presh_bg,lnph_bg,
+!    x                   ts_bg,rough_bg,sn_bg,sw_bg,
+!    x                   rousea_bg,tsea_bg,
+!    x                   u_tl,v_tl,T_tl,q_tl,lnph_tl,
+!    x                   T2_bg,RH2_bg,u10_bg,v10_bg,
+!    x                   lsea,
+!    x                   T2_tl,RH2_tl,u10_tl,v10_tl)
+!#ifdef TESTR2UV10
+!#include "testr2uv103.h"
+!#endif
+!     endif
+
+      if( LRH2 ) then
+        call newrh2obs(nobsh_sub,totobs_sub,nlev,
+     x        T_bg,q_bg,presf_bg,
+     x        RH2_bg)
+
+        call newrh2obs_tl(nobsh_sub,totobs_sub,nlev,
+     x        T_bg,q_bg,presf_bg,
+     x        T_tl,q_tl,presf_tl,
+     x        RH2_bg,RH2_tl)
+
       endif
...
}}}

2) Call to new routine newrh2obs_ad.F instead of tq2uv10obs_ad.F , in case of assimilating RH2m observations(LRH2M true):
{{{
...
 !     Reject passive report
@@ -732,20 +745,30 @@
 !     Adjoints of 2 meter temperature, 2 meter relative humidity
 !        and 10 meter wind calculations
 !
-      if( LT2 .or. LRH2 .or. Luv10 ) then
-#ifdef TESQT2UV10
-#include "tesqt2uv102.h"
-#endif
-         call tq2uv10obs_ad(nobsh_sub,totobs_sub,nlev,
-     x        u_bg,v_bg,T_bg,q_bg,presh_bg,lnph_bg,
-     x        ts_bg,rough_bg,sn_bg,sw_bg,
-     x        rousea_bg,tsea_bg,
-     x        T2noe_mod,RH2noe_mod,u10noe_mod,v10noe_mod,
-     x        lsea,
-     x        passive_T2_mod,passive_RH2_mod,
-     x        passive_uv10_mod,passive_uv10_mod,
-     x        u_ad,v_ad,T_ad,q_ad,lnphdum_ad)
-      endif
+!     if( LT2 .or. LRH2 .or. Luv10 ) then
+!#ifdef TESQT2UV10
+!#include "tesqt2uv102.h"
+!#endif
+!        call tq2uv10obs_ad(nobsh_sub,totobs_sub,nlev,
+!    x        u_bg,v_bg,T_bg,q_bg,presh_bg,lnph_bg,
+!    x        ts_bg,rough_bg,sn_bg,sw_bg,
+!    x        rousea_bg,tsea_bg,
+!    x        T2noe_mod,RH2noe_mod,u10noe_mod,v10noe_mod,
+!    x        lsea,
+!    x        passive_T2_mod,passive_RH2_mod,
+!    x        passive_uv10_mod,passive_uv10_mod,
+!    x        u_ad,v_ad,T_ad,q_ad,lnphdum_ad)
+!     endif
+
+       if( LRH2 ) then
+
+          call newrh2obs_ad(nobsh_sub,totobs_sub,nlev,
+     x         T_bg,q_bg,presf_bg,
+     x         RH2noe_mod,
+     x         passive_RH2_mod,
+     x         T_ad,q_ad,presf_ad)
+
+       endif
 !------------------------------------------------------------------------------
 !
 !     Adjoints of geopotential and pressure calculations

...
}}}

 * '''tq2uv10obs.F:'''

Just an inclusion of the Richardson Number declaration has been done.

{{{
...
Modified: trunk/hirlam/obop/tq2uv10obs.F
==============================================================================
--- trunk/hirlam/obop/tq2uv10obs.F	(original)
+++ trunk/hirlam/obop/tq2uv10obs.F	Thu Oct 19 13:26:05 2006
@@ -25,7 +25,7 @@
 c - INPUT LOGICAL
      &           LSEA,
 c - OUTPUT 1D
-     &           Z0SEA,T2M,RH2M,U10,V10)
+     &           Z0SEA,T2M,RH2M,U10,V10,ZRI)

       IMPLICIT NONE
...
}}}

[[Center(begin)]]
[https://hirlam.org/trac/wiki/HirlamHowto See also the corresponding pages on HIRLAM Howto]
[[Center(end)]]

[[SubWiki]]

[[Center(begin)]]
[https://hirlam.org/trac/wiki/HirlamSystemDocumentation Back to the main page of the HIRLAM System Documentation]
[[Center(end)]]
----
[[Center(begin)]]
[[Disclaimer]]

[[Color(red, Last modified on)]] [[LastModified]]
[[Center(end)]]