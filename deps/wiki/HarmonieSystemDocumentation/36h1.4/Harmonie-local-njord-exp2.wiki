[[PageOutline]]

[[Center(begin)]]
== '''met.no Harmonie setup''' ==
= '''HM04_oper_make with cy36h1.3 and makeup''' =
[[Center(end)]]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Now we have tested the operational cycle. Let us try out the latest cycle with makeup. In this we will also add the option of 3D-Var 

If you cut and paste, take care as the lines might wrap!

{{{
#!sh
   alias Harmonie='/home/ntnu/forecast/HL_release/harmonie-36h1.3/config-sh/Harmonie'  # Save us from typing full path to the Harmonie script
   mkdir -p $HOME/hm_home/HM04_oper_make                                               # -p also creates hm_home if not existing
   cd $HOME/hm_home/HM04_oper_make                                                     # Enter our experiment
   Harmonie setup -r /home/ntnu/forecast/HL_release/harmonie-36h1.3/ -h njord -c ALARO # Setup for njord for cy36h1.3 and configuration ALARO
}}}

We must check out the following files:
{{{
   Harmonie co msms/harmonie.tdf
   Harmonie co scr/Makegrib
   Harmonie co scr/Prepare_pgd
   Harmonie co scr/Verify_harmonie
   Harmonie co scr/Makeup_sync
   Harmonie co scr/include.ass
   Harmonie co scr/submission.db
}}}

First let us configure the experiment in {{{sms/config_exp.h}}} (The lines with {{{EXT_BDDIR}}} and {{{EXT_ACCESS}}} is not already in the file, but is added by you):
{{{
#!sh
   DOMAIN=NORWAY_4KM
   DYNAMICS=nh
   ANAATMO=3DVAR
   HOST_MODEL="hir"
   WRITUPTIMES="00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 27 30 33 36 39 42 45 48 51 54 57 60"
   BDINT=1
   BDLIB=H08
   EXT_BDDIR=${EXT_TEST_BDDIR-/home/ntnu/forecast/mSMS/H08/@YYYY@@MM@@DD@_@HH@/}
   EXT_ACCESS="ln -sf"
   BDSTRATEGY=same_forecast
   ARCHIVE_ECMWF=no
   OPERATIONAL_POSTP=no
   MAKEGRIB=yes
   VERIFY=yes
   OBSEXTR=bufr
   FLDVER=no
}}}

For this run we want data assimilation for upper air so we modify the data assimilation settings in scr/include.ass
{{{
#!sh
   # Together with the other if tests we must add the name of our structure functions. For example after:
   # elif [ "$DOMAIN" = NORWAY_5.5 ]; then
   #   JBDIR=${JBDIR-"ec:/snh/HARMONIE/const/jbdata"}
   #   f_JBCV=stabfiltn_NORWAY55_128.cv
   #   f_JBBAL=stabfiltn_NORWAY55_128.bal

   elif [  "$DOMAIN" = NORWAY_4KM ]; then
     JBDIR=ec:/sbt/harmonie/Const/ALR_60L_HIRL
     f_JBCV=stabfiltn_NORWAY4KM_168.cv
     f_JBBAL=stabfiltn_NORWAY4KM_168.bal
}}}

Then let us set the job submission environment in Env_submit:
{{{
#!sh
    $nprocx=8;
    $nprocy=16;

    # It can be a bit tricky with the number of pools and processor for screening and minimization so we set 
    # these all to the same number of processors we are using in our job script! This will cause many pools,
    # and empty pools sometimes cause problems

    $odbnprocy=128;

    $minnprocy=128;

    $scrnprocy=128;   
}}}

Also here we need to make sure that the boundaries and post-procesing is not done too many at the same time in msms/harmonie.tdf as in the above example:
{{{
                  family LBC@N@
   if ( @N@ < 6 )
               trigger ( Boundary_strategy == complete )
   else
               trigger ( LBC@N-6@ == complete )
   endif
               task ExtractBD

   ...............


  if( $ENV{TDF_VERITIMES} =~ /\b0*@N@\b/ )
            family fldextr@N@
    ifeq($ENV{FLDEXTR},no)
               complete 1
    endif

    if( $ENV{USE_STNLIST} ne 'yes' && $ENV{OBSEXTR} eq 'bufr' )
      if ( @N@ > 2 )
               trigger ( fldextr@N-3@ == complete )
      else
               trigger ( ../FetchOBS == complete )
      endif
    else
      if ( @N@ > 2 )
               trigger ( fldextr@N-3@ == complete )
      endif
    endif
               task Run_fldver
            endfamily # fldextr
  endif



   ...............



               family Makegrib@N@
   if ( @N@ > 2 )
               trigger ( Makegrib@N-3@ == complete )
   else
               trigger ( ../Verify_harmonie == complete )
   endif
               task Makegrib
            endfamily # Makegrib@N@


}}}
Remarks: if,else and endif should be first in the line. The hard-coded 3 (and 2) defines how many mini-SMS tasks in parallell. The LBC@N@ family is a part of the Boundaries family. Make sure you leave white spaces around the parentheses.

 
In the Makegrib script we must also here set specific met.no settings for post-processing in scr/Makegrib:
{{{
#!sh
   # Insert in both naminterp namelist blocks (sufex and Upper air)
   rmisval = 1.0e+20,

   # Replace the PPPKEY's in the naminterp block for Upper air
   PPPKEY(1:42)%ppp =   1,  1,  6,  11, 11, 11, 11, 11, 33, 33, 33, 34, 34, 34, 51, 51, 52, 61, 62, 63, 66, 71, 71, 73, 74, 75, 78, 79, 81, 86, 86, 87,111,112,115,117,121,122,124,193,193,243
   PPPKEY(1:42)%ttt = 103,105,105,105,105,105,109,109,105,109,109,105,109,109,109,109,105,105,105,105,105,105,109,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105
   PPPKEY(1:42)%lll =   0,  0,  0,999,  0,  2,$N1,$NL, 10,$N1,$NL, 10,$N1,$NL,$N1,$NL,  2,  0,  0,  0,  0,  0,$NL,  0,  0,  0,  0,  0,  0,999,  0,  0,  0,  0,  0,  0,  0,  0,  0,999,  0,  0,
   lwrite_pponly=.TRUE.,

   # Below: Start file conversion
   # insert
   if [ "$USER" == "forecast" -a "$EXP" == "HM04" ]; then
     RUNHAR="$HOME/runhar04"
     [ -d $RUNHAR ] || mkdir $RUNHAR
     RUNHARFILE="har04"
   else
     RUNHAR="/work/$USER/run$EXP"
     [ -d $RUNHAR ] || mkdir $RUNHAR
     RUNHARFILE="$EXP"
   fi

   #Replace: G=fc${DTG}+${FG}grib             # Atmospheric GRIB file
   # by:
   if [ "$USER" == "forecast" ]; then
     G=${RUNHARFILE}_${HH}+${FFF}.grb             # Atmospheric GRIB file
   else
     G=${RUNHARFILE}_${DTG}+${FFF}.grb             # Atmospheric GRIB file
   fi

   # Replace: $MPPGL $BINDIR/gl -p $FROMDIR/$A -o $ARCHIVE/$G -s -n namelist_makegrib${MG} || exit
   # by
   $MPPGL $BINDIR/gl -p $FROMDIR/$A -o $RUNHAR/$G -s -n namelist_makegrib${MG} || exit

}}}

The archiving of the PGD file does not work out of the box in cy36h1.3, one way to avoid it is to set in scr/Prepare_pgd:
{{{
#!sh
   #Replace: if [ "$HM_EXP"  ] ; then
   # by:
   if [ "$ARCHIVE_ECMWF" == "yes"  ] ; then
}}}
this will be solved in an alternative way in the next cycle.

We would like to also generate an export version of the verification tar file in scr/Verify_harmonie:
{{{
#!sh
   # Insert this line after ./Run_verobs_temp    Env_exp || exit
   ./Transport_ver      Env_exp || exit
}}}

to avoid unnecessary configuration time with makeup, we modify scr/Makeup_sync
{{{
#!sh
   # replace
   # rsync -aui $RSYNC_EXCLUDE --exclude=gmkpack --exclude=monitor/bin $HM_LIB/util . >> $HM_DATA/.makeup_changes || exit
   # by
   rsync -aui $RSYNC_EXCLUDE --exclude=gmkpack --exclude=monitor/bin --exclude=monitor/scr $HM_LIB/util . >> $HM_DATA/.makeup_changes || exit
}}}

change in scr/submission.db:
{{{
    # replace 12 by 24 to only get long forecasts for 00 UTC
    if ( $HH % 24 ) { $LL = $llshort; } else { $LL = $ENV{LLMAIN}; }
}}}

Now we are finished with the modifications and we can start the experiment. Below is a similar job script as for HM04_oper for HM04_oper_make. The account should be set to an account that you have access to. {{{mip000}}} is the account for operational testing:
{{{
#!sh
#! /bin/bash
#@ account_no = mip000
#@ shell = /usr/bin/sh
#@ job_type = parallel
#@ output   = HM04_oper_make.log
#@ error    = HM04_oper_make.log
#@ job_name = HM04_oper_make
#@ class = large
#@ node = 8 
#@ tasks_per_node = 16
#@ network.MPI = sn_all,,us
#@ environment = OMP_NUM_THREADS = 1
#@ resources = ConsumableCpus(1) ConsumableMemory(830mb)
#@ wall_clock_limit = 200:00:00
#@ cpu_limit = 200:00:00
#@ notification = never
#@ queue
#

##############################################################################################################
#    Your settings
#
JOBNAME="HM04_oper_make" # Same as job_name in the header above. Should be unique for the experiment
DTGBEG_USER=2007120218   # Start of your simulation. Used the first time you run the model. When re-submitting DTGBEG is found in progress.log
DTGEND=2007120306        # End of your simulation. Can be extended. 
LLMAIN=36                # The forecast length on main cycles. For testdata this is only 00 UTC
EXP=HM04_oper_make       # Your experiment name. When exported this is also "visible" for "Harmonie start"
BUILD=yes                # If you are restarting your experiment and you don't want to re-compile, set this to no
CREATE_CLIMATE=yes       # Could be set to no if already have your climate files for the full period to save some time
EXT_TEST_BDDIR=/home/ntnu/forecast2/TESTDATA/ParRunsWinter/savehirH08  # Set the path for our H08 boundaries
KEEPHOUR=24              # Hours before ARCHIVE is cleaned
##############################################################################################################


############################### You probably don't need to edit below this line ###############################
###############################################################################################################

# Include common local Harmonie shell functions
if [ -f /home/ntnu/forecast/Harmonie_Funcs.sh ]; then
    source /home/ntnu/forecast/Harmonie_Funcs.sh || exit 1
else
   echo "Necessary Harmonie functions are missing"
   exit 1
fi

#
# Finding job information
jobid=`/home/ntnu/forecast/bin/get_job_id.sh $JOBNAME`
echo $jobid | grep '^f[0-9][0-9]n[0-9][0-9]io' > /dev/null 2>&1
if [ "$?" -eq "1" ]; then
  echo "The job id does not have valid name: $jobid"
  echo "Make sure that your job is called the same in the header as the variable jobname"
  exit 1
fi
masternode=`/home/ntnu/forecast/bin/master_node.sh $jobid`
echo
echo "**************************************************** NB! *******************************************************************"
echo "To check if your job is killed because of memory exceeding the amount available, try the following command if the run aborts"
echo "/home/ntnu/forecast/bin/epilog.sh $jobid $masternode"
echo
/home/ntnu/forecast/bin/epilog.sh $jobid $masternode
echo

#
# Go to the experiment
# This is where you created your experiment. 
# It is safest to start from here. 
# If EXP is not exported the experiment name will be taken from directory you are in when typing Harmonie start

cd $HOME/hm_home/$EXP || exit

############################# Check if this is a continuation run and set DTG ##################################

#If warm start get DTG from progress.log
if [ -f progress.log ]; then
  # Source DTG and DTGBEG from progress.log
  source progress.log

  # Test validity
  if [ "$DTGBEG" -ne "$DTGBEG_USER" ]; then
    echo "ERROR: Mismatch in DTGBEG in progress.log and the job script"
    exit 1
  fi
  if [ -f progressPP.log ]; then
    source progressPP.log
    if [ "$DTGPP" -ne "$DTG" ]; then
      echo "ERROR: Mismatch in DTG from progress.log and DTGPP in progresPP.log. Probably the model has previously failed in post-processing."
      echo "Correct the DTG and DTGPP before re-submitting!"
      exit 1
    fi 
  else
    echo "ERROR: Can not do a warmstart if progressPP.log is missing!"
    exit 1
  fi

  # print out result
  if [ "$DTG" -ne "$DTGBEG" ]; then
    echo "Warm-start for $DTG because DTG is not equal DTGBEG"
  else
    echo "Cold-start for $DTG because DTG is equal DTGBEG"
  fi
else
  DTGBEG=$DTGBEG_USER
  DTG=$DTGBEG_USER
  echo "This is a cold-start"
fi

################################### Start Harmonie for each cycle ######################################

# First export some variables for the model
export EXP BUILD EXT_TEST_BDDIR CREATE_CLIMATE
export mSMS_WAIT=yes    # Make the Harmonie start command wait in this script until it finishes, aborts or mSMS dies
export mSMS_WEBPORT=2   # Make you able to connect with Harmonie mon when experiments start
export mXCdp=DISABLE    # This will also be done automatically as no display variable is known when the job is sent to loadleveller. Instead re-connect with Harmonie mon

# Loop over the cycles we want to run
while [ "$DTG" -le "$DTGEND" ]; do
  echo "============ $DTG start ================"
 
  # Prepare observations for this day 
  #
  # Copy all the observations
  obsdir="/home/ntnu/forecast/TESTDATA/ParRuns09-metnoObs"
  # Create directories if not existing
  [ -d /work/$USER/HM_mSMS ] || mkdir /work/$USER/HM_mSMS
  [ -d /work/$USER/HM_mSMS/$EXP ] || mkdir /work/$USER/HM_mSMS/$EXP
  [ -d /work/$USER/HM_mSMS/$EXP/observations ] || mkdir /work/$USER/HM_mSMS/$EXP/observations
  echo "Copying observations found for this day. DTG is $DTG"
  ymd_dtg=`echo $DTG | cut -c1-8`
  # list files for this day. Files are called convHH.bufr_YYYYMMDD for ParRuns09-metnoObs 
  for f in `ls -1 $obsdir/conv*_$ymd_dtg`; do
    ymd=`echo $f | cut -c61-70`
    hh=`echo $f | cut -c53-54`
    obdtg=${ymd}${hh}
    checkDTG $obdtg
    ob="/work/$USER/HM_mSMS/$EXP/observations/ob${obdtg}"
    if [ ! -f $ob ]; then
      echo "Copying $f to $ob"
      cp $f $ob
    else
      echo "$ob already exists"
    fi
  done

  # Start depending of cold or warm start
  if [ "$DTG" -ne "$DTGBEG" ]; then
    # Warm start
    /home/ntnu/forecast/HL_release/harmonie-36h1.3/config-sh/Harmonie prod DTGEND=$DTG LLMAIN=$LLMAIN
    # You will need full path to Harmonie here, or alternatively use /home/ntnu/forecast/bin//Harmonie which should point to the newest release
  else
    # Cold start
    /home/ntnu/forecast/HL_release/harmonie-36h1.3/config-sh/Harmonie start DTG=$DTG LLMAIN=$LLMAIN
    # You will need full path to Harmonie here, or alternatively use /home/ntnu/forecast/bin//Harmonie which should point to the newest release
  fi

  # Check exit status of the run
  if [ "`tail -1 /work/$USER/HM_mSMS/$EXP/harmonie.log`" != "COMPLETE" ]; then
    echo "The job was not complete!!! Exiting job... Check /work/$USER/HM_mSMS/$EXP/harmonie.log"
    exit 1
  fi  

  # Clean up archived old cycles or we might run out of disk space. Save the first cycle because of statistics
  KEEP_DTG_END=`/home/ntnu/forecast/bin/mandtg $DTG + -$KEEPHOUR`
  checkDTG $KEEP_DTG_END
  KEEP_DTG=`/home/ntnu/forecast/bin/mandtg $DTGBEG + 6`
  checkDTG $KEEP_DTG
  echo "KEEP_DTG_END for KEEPHOUR $KEEPHOUR is: $KEEP_DTG_END"
  [ "$KEEP_DTG" -ge "$KEEP_DTG_END" ] && echo "No check for old archived directories done"
  while [ "$KEEP_DTG" -lt "$KEEP_DTG_END" ]; do
    checkDTG $KEEP_DTG      # Produces yy mm dd hh
    # Delete old archives to save disk space 
    if [ -d /work/$USER/HM_mSMS/$EXP/archive/${yy}/${mm}/${dd}/${hh} ]; then
      echo "Deleting /work/$USER/HM_mSMS/$EXP/archive/${yy}/${mm}/${dd}/${hh}"
      rm -r /work/$USER/HM_mSMS/$EXP/archive/${yy}/${mm}/${dd}/${hh} 
    fi
    KEEP_DTG=`/home/ntnu/forecast/bin/mandtg $KEEP_DTG + 6` 
  done 

  echo "============ $DTG end ================="
 
  # Get the DTG for the next cycle and check if it is valid
  DTG=`/home/ntnu/forecast/bin/mandtg $DTG + 6`
  checkDTG $DTG
done
echo "Script has finished because DTG $DTG > $DTGEND"

}}}

The structure of the output is similar to HM04_oper. See more detailed instructions in the bottom [wiki:HarmonieSystemDocumentation/36h1.4/Harmonie-local-njord here].

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
= If it fails =
If it fails for some reason, look into the logs and fix the problem. Before you re-submit, you might have to remove the .pid file:
{{{
#!sh
$ rm /work/$USER/HM_mSMS/HM04_oper_make/mSMS.pid
}}}
Also, make sure your {{{progressPP.log}}} have the same {{{DTG}}} value as {{{progress.log}}}. Eg. if {{{progress.log}}} says "{{{DTG=2007120300 export DTG}}}" change (if necessary) your {{{progressPP.log}}} accordingly.
 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[[Center(begin)]]
[wiki:HarmonieSystemDocumentation/36h1.4/Harmonie-local-njord Back to the njord page]
[[Center(end)]]