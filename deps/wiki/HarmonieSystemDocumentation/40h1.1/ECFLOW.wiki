[[PageOutline]]

[[Center(begin)]]
= '''Harmonie System Documentation''' =
== ''' Running Harmonie under ECFLOW''' ==
[[Center(end)]]

== Introduction ==

This document describes how to run Harmonie 40h1 under ecFLOW scheduler.
The ecFlow is the new ECMWFâ€™s workflow manager and it has been written using python to improve maintainability, allow easier modification and introduce object orientated feature  have been replaced by Python.

The most remarkable differences with mSMS are:
 - Multiple suites can monitored at the same time.
 - Server / Client structure with backup server and log server capabilities.
 - Dynamical suite definition in python. Not template parsing needed.  
 - Text based suite definition allow backwards compatibility.
 - More control options of each family, tasks, variables and more powerful GUI than mSMS.

== Trunk and tags ==

Ecflow can be used in the trunk version and the harmonie-40h1.1.beta.1 tagged version:


 * Trunk version [source:trunk/]
 * harmonie-40h1.1.beta.1 tagged version: [source:tags/harmonie-40h1.1.beta.1]

== Harmonie_40h1_ecflow downloads ==

 * On ECMWF, the check-out version 40h1.1.beta.1 or the trunk version ecflow is available as,
{{{
   ecgb:/home/ms/spsehlam/hlam/harmonie_release/tags/harmonie-40h1.1.beta.1
}}}
   or
{{{   
   ecgb:/home/ms/spsehlam/hlam/harmonie_release/trunk
}}}
 * Via Subversion:
{{{
   svn co https://svn.hirlam.org/harmonie_release/trunk
}}}
   or 
{{{
   svn co https://svn.hirlam.org/harmonie_release/tags/harmonie-40h1.1.beta.1
}}}
 
 * The testbed data set including boundaries, observations, climate files and background statistics for assimilation can be downloaded [https://hirlam.org/portal/download/testbed/38h1/38h1.tar here]. Read more about the testbed [wiki:HarmonieSystemDocumentation/40h1.1/Evaluation/HarmonieTestbed here].

 * Climate data for cy40h1 can be found under [https://hirlam.org/portal/download/harmonie_climate/38h1.tar.gz] with an increment for [https://hirlam.org/portal/download/harmonie_climate/40h1_increment_to_38h1.1.tar.gz 40h1]or on cca under {{{/project/hirlam/harmonie/climate/40h1}}}.
 * RTTOV constants for cy40h1 are the same as for 38h1.2 and can be found under [https://hirlam.org/portal/download/sat_const/sat_const_cy38h1.2.tar.gz] or on c2a under {{{/project/hirlam/harmonie/sat_const/cy40h1}}}.

== Configure your experiment ==

Create an experiment directory under $HOME/hm_home and use the master script Harmonie to set up a minimum environment for your experiment.

{{{
   mkdir -p $HOME/hm_home/my_exp
   cd $HOME/hm_home/my_exp
   ~hlam/harmonie_release/tags/harmonie-40h1.1.beta.1/config-sh/Harmonie setup -r ~hlam/harmonie_release/trunk -h ecgb-cca
   
   or 

  ~hlam/harmonie_release/tags/harmonie-40h1.1.beta.1/config-sh/Harmonie setup -r ~hlam/harmonie_release/tags/harmonie-40h1.1.beta.1 -h ecgb-cca 
}}}

 Where
 
 * -r tells which version to use. There are several old versions kept on ecgb. Check the directories under {{{~hlam/harmonie_release}}} to see the available versions. 
 * -h tells which configuration files to use. At ECMWF config.ecgb is the default one.

 This would give you the default setup which currently is AROME physics with CANARI+OI_MAIN surface assimilation and 3DVAR upper air assimilations with 3h cycling on a domain covering Denmark using 2.5km horizontal resolution and 65 levels in the vertical.

 Now you can edit the basic configuration file [source:tags/harmonie-40h1.1/sms/config_exp.h sms/config_exp.h] to configure your experiment scenarios. Modify specifications for model versions (AROME, ALARO), data locations, settings for dynamics, physics, domain, coupling host model etc. Read more about the options in [wiki:HarmonieSystemDocumentation/40h1.1/ConfigureYourExperiment here]. You can also use some of the predefined configurations by calling Harmonie with the -c option:

 where {{{CONFIG}}} is one of the setups defined in [source:tags/harmonie-40h1.1/scr/Harmonie_configurations.pm Harmonie_configurations.pm]. If you give {{{-c}}} with out an argument or a non existing configuration a list of configurations will be printed.

In some cases you might have to edit the general system configuration file, [source:tags/harmonie-40h1.1/config-sh/config.ecgb Env_system] or the rules for how to submit jobs on ecgb/cca ( or your local platform ), [source:tags/harmonie-40h1.1/config-sh/submit.ecgb Env_submit]. If you experiment in data assimilation you might also want to change [source:tags/harmonie-40h1.1/scr/include.ass scr/include.ass].



=== Start your experiment monitored by ecFlow===
 
Launch the experiment by giving start time, DTG, end time, DTGEND, forecast length, LL and the scheduler, SCHEDULER

{{{
      ~hlam/Harmonie start DTG=YYYYMMDDHH DTGEND=YYYYMMDDHH LL=12 SCHEDULER=ECFLOW
                                    # e.g., ~hlam/Harmonie start DTG=2012122400 DTGEND=2012122406 LL=12 SCHEDULER=ECFLOW
}}}

 If you would like to only run long forecasts at 00/12 UTC and short (3h) at 03/06/09/15/18/21, you specify the longer forecast length as LLMAIN. 

{{{
      ~hlam/Harmonie start DTG=2012122400 LLMAIN=24 SCHEDULER=ECFLOW
}}}

 If successful, ecFlow will identify your experiment name and start building your binaries and run your forecast. If not, you need to examine the ecFlow log file $HM_DATA/ECF.log. $HM_DATA is defined in your Env_system file. At ECMWF {{{$HM_DATA=$SCRATCH/hm_home/$EXP}}} where {{{$EXP}}} is your experiment name.

 ecflowview should start automatically. If not, you need to select your server as defined by your username on the EC HPC. This is done in the menu of the ecFlow GUI; to view any suite for your server or other servers, the server must be added to the ecFlowview !Edit/Preferences/Servers and selected in Servers (this will be automatized in the next version). The server and the port can be obtained by

{{{ 
      ecflow_server status 

}}}


 * More than one experiment is not allowed with the same name monitored in the same server so mSMS.job will start the server and delete previous suite for you.
 * For deleting a suite manually using ecflow_client --port XXXX --host XXXX --delete force yes /suite or using the GUI Collector node+CTRL+click1 selecting ###ecflow_client --delete force yes <full_name>
 * If other manual intervention in server or client is needed you can use ecflow commands [https://software.ecmwf.int/wiki/display/ECFLOW/Home].
 * This branch also allows using mSMS not including SCHEDULER=ECFLOW . 

=== Continue your experiment ===

If your experiment have successfully completed and you would like to continue for another period you should write

{{{
      ~hlam/Harmonie prod DTGEND=YYYYMMDDHH LL=12 SCHEDULER=ECFLOW 
}}}

By using {{{prod}}} you tell the system that you are continuing the experiment and using the first guess from the previous cycle. The start date is take from a file progress.log created in your $HOME/hm_home/my_exp directory. If you would have used {{{start}}} the initial data would have been interpolated from the boundaries, a cold start in other words.

== ECFLOW control ==

=== Finding the port and host of the ECFLOW server ===

The port and host are given in the logfiles under /hpc/perm/ms/$GROUP/$USER/HARMONIE/.

{{{

snh@ecgb11:~/hm_home/oper_ens_bd> ls -rlt /hpc/perm/ms/$GROUP/$USER/HARMONIE/ecgb*
-rw-r-----. 1 snh se  17213046 Nov 21 15:48 /hpc/perm/ms/se/snh/HARMONIE/ecgb11.3821.check.b
-rw-r-----. 1 snh se  17214834 Nov 21 15:50 /hpc/perm/ms/se/snh/HARMONIE/ecgb11.3821.check
-rw-r-----. 1 snh se 628100594 Nov 21 15:51 /hpc/perm/ms/se/snh/HARMONIE/ecgb11.3821.ecf.log

}}}


=== Check the status of your server ===

To check the status of your server you can use

{{{
ecflow_client --stats  --port <your_port>  --host ecgb
}}}

or

{{{
ecflow_client --port  <your_port>  --host ecgb  --ping
}}}

where <your_port> is the number visible in the log file name under /hpc/perm/ms/$GROUP/$USER/HARMONIE/ as described above.

=== Open the viewer of a running ECFLOW server ===

If you know that your ECFLOW server is running but you have no viewer attached to it you can restart the viewer:

{{{
ecflowview  &
}}}

=== Stop your ECFLOW server ===

{{{
ecflow_stop.sh
}}}


=== Restart your ECFLOW server ===

 If the server is not running you can start again using the script

{{{
 ecflow_start.sh -d /hpc/perm/ms/$GROUP/$USER/HARMONIE/
}}}


=== Add another user to your ecflowviewer ===

Sometimes it's handy to be able to follow, and control, your colleagues experiments. To be able to do this do the following steps:

 - Find the port number of your colleague as described above.
 - In the ecflowviewer choose edit->preferences->servers and fill in the appropriate host and port and give it a useful name. Click on add to save it.
 - If you click on Servers in the viewer the name should appear and you can make it visible by clicking on it.

[[Center(begin)]]
[wiki:HarmonieSystemDocumentation Back to the main page of the HARMONIE System Documentation]
[[Center(end)]]
----

[[Center(begin)]]
[[Disclaimer]]

[[Color(red, Last modified on)]] [[LastModified]]
[[Center(end)]]
