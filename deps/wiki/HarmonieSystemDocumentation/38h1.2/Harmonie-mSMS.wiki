[[PageOutline]]

[[Center(begin)]]
== '''Harmonie System Documentation''' ==
= '''Running Harmonie under (m)SMS''' =
[[Center(end)]]

== Introduction ==

The Harmonie system runs through a number of steps to help you complete your experiment. The chain can be summarized like:

 * Configure and start the experiment. This is where you define your domain, choose your settings and specify the period for your experiment.

Once you have done this you can start the system and let it create the basic infrastructure

 * Setup the necessary directories and copy the system files needed.
 * Compile the binaries you need to run your experiment.
 * Create the constant climate files specifying your domain

With the basic setup and files in place we can proceed to the integration part where we have three loops taking care of 

  * Prepare boundaries and observations
  * Run assimilation and forecasts
  * Post process and archive the result

The three different task are allowed to run ahead/after each other to get a good throughput.

The configuration, the full suite and the relation between different tasks is controlled by the scheduler [wiki:HarmonieSystemDocumentation#Tutorials mini-SMS] which has a graphical interface [wiki:HirlamSystemDocumentation/scripts/mXCdp mXCdp]. This documentation describes how to get started with your first experiment. The description follows the setup at ECMWF, but your local system setup would be very similar but most likely simpler. The reference Harmonie system on ECMWF platform assumes a dual-hosts setup using mini-SMS. By default, the mSMS script uses the front-end ecgb to configure and launch experiments, whereas c2a/cca is used for all computations except those for operations related to observation verification and monitoring. 

Following example shows the steps to launch an Harmonie experiment my_exp from ecgb.

== Extract and build HARMONIE from the HARMONIE repository ==

If this is the first time you install HARMONIE on your local platform please take a look at the basic install [wiki:HarmonieSystemDocumentation/38h1.2/Installation instructions]. If you are at ECMWF or someone else has done this locally you can proceed to the configuration of your experiment.

== Configure your experiment ==

Create an experiment directory under $HOME/hm_home and use the master script Harmonie to set up a minimum environment for your experiment.

{{{
   mkdir -p $HOME/hm_home/my_exp
   cd $HOME/hm_home/my_exp
   ~hlam/harmonie_release/tags/harmonie-38h1.2.beta.2/config-sh/Harmonie setup -r ~hlam/harmonie_release/tags/harmonie-38h1.2.beta.2 -h ecgb-cca
}}}

 Where
 
 * -r tells which version to use. There are several old versions kept on ecgb. Check the directories under {{{~hlam/harmonie_release}}} to see the available versions. 
 * -h tells which configuration files to use. At ECMWF config.ecgb is the default one.

 This would give you the default setup which currently is AROME physics with CANARI+OI_MAIN surface assimilation and 3DVAR upper air assimilations with 3h cycling on a domain covering Denmark using 2.5km horizontal resolution and 65 levels in the vertical.

 Now you can edit the basic configuration file [source:tags/harmonie-38h1.2/sms/config_exp.h sms/config_exp.h] to configure your experiment scenarios. Modify specifications for model versions (AROME, ALARO), data locations, settings for dynamics, physics, domain, coupling host model etc. Read more about the options in [wiki:HarmonieSystemDocumentation/38h1.2/ConfigureYourExperiment here]. You can also use some of the predefined configurations by calling Harmonie with the -c option:

{{{
   ~hlam/Harmonie setup -r PATH_TO_HARMONIE -h YOURHOST -c CONFIG 
}}}

 where {{{CONFIG}}} is one of the setups defined in [source:tags/harmonie-38h1.2/scr/Harmonie_configurations.pm Harmonie_configurations.pm]. If you give {{{-c}}} with out an argument or a non existing configuration a list of configurations will be printed.

In some cases you might have to edit the general system configuration file, [source:tags/harmonie-38h1.2/config-sh/config.ecgb Env_system] or the rules for how to submit jobs on ecgb/cca ( or your local platform ), [source:tags/harmonie-38h1.2/config-sh/submit.ecgb Env_submit]. If you experiment in data assimilation you might also want to change [source:tags/harmonie-38h1.2/scr/include.ass scr/include.ass].

=== Start your experiment ===
 
Launch the experiment by giving start time, DTG, end time, DTGEND, and forecast length, LL

{{{
      ~hlam/Harmonie start DTG=YYYYMMDDHH DTGEND=YYYYMMDDHH LL=12
                                    # e.g., ~hlam/Harmonie start DTG=2012122400 DTGEND=2012122406 LL=12
}}}

 If you would like to only run long forecasts at 00/12 UTC and short (3h) at 03/06/09/15/18/21, you specify the longer forecast length as LLMAIN. 

{{{
      ~hlam/Harmonie start DTG=2012122400 LLMAIN=24
}}}

 If successful, mini-SMS will identify your experiment name and start building your binaries and run your forecast. If not, you need to examine the mSMS log file $HM_DATA/mSMS.log. $HM_DATA is defined in your Env_system file. At ECMWF {{{$HM_DATA=$SCRATCH/hm_home/$EXP}}} where {{{$EXP}}} is your experiment name. Read more about where things happen further down.

=== Continue your experiment ===

If your experiment have successfully completed and you would like to continue for another period you should write

{{{
      ~hlam/Harmonie prod DTGEND=YYYYMMDDHH LL=12 
}}}

By using {{{prod}}} you tell the system that you are continuing the experiment and using the first guess from the previous cycle. The start date is take from a file progress.log created in your $HOME/hm_home/my_exp directory. If you would have used {{{start}}} the initial data would have been interpolated from the boundaries, a cold start in other words.

=== !Start/Restart of mXCdp

 To start the graphical window for mSMS on ecgb type

{{{
      ~hlam/Harmonie mon
}}}

 The graphical window, mXCdp runs independently of the mSMS job and can be closed and restarted again with the same command. With the graphical interface you can control and view logfiles of each task. 


=== Making local changes ===

Very soon you will find that you need to do changes in a script or in the source code. Once you have identified which file to edit you put it into the current $HOME/hm_home/my_exp directory, with exactly the same subdirectory structure as in the reference. e.g, if you want to modify a namelist setting 

{{{
   ~hlam/Harmonie co nam/harmonie_namelists.pm         # retrieve default namelist harmonie_namelists.pm
   vi nam/harmonie_namelists.pm                        # modify the namelist
}}}

Next time you run your experiment the changed file will be used. You can also make changes in a running experiment. Make the change you wish and rerun the {{{InitRun}}} task in the mXCdp window. The !InitRun task copies all files from your local experiment directory to your working directory {{{$HM_DATA}}}. Once your {{{InitRun}}} task is complete your can rerun the task you are interested in. If you wish to recompile something you will also have to rerun the {{{Build}}} tasks. Read more about how to control and rerun tasks in mini-SMS from mXCdp [wiki:HarmonieSystemDocumentation/38h1.2/scripts/mXCdp here].

=== Directory structure of your experiment ===

On ecgb, you can follow the progress of the runs on $SCRATCH/hm_home/my_exp. More complete results and the main data are available on c2a:$SCRATCH/hm_home/my_exp. Under these directories you will find:

 * '''Data on c2a'''
   * All binaries under '''bin'''
   * IFS libraries, object files and source code under '''gmkpack_build''' if you build with gmkpack or under '''lib/cca''' if you build with makeup
   * Scripts, config files, sms and msms definitions under '''lib/'''
   * Utilities such as gmkpack, gl and the verification package under '''lib/util'''
   * Climate files under '''climate'''
   * Working directory for the current cycle under '''YYYYMMDD_HH'''
     * If an experiment fails it is useful to check the IFS log file, NODE.001_01, in the working directory of the current cycle ( $HM_DATA/YYYYMMDD_HH ). The failed job will be in a directory called something like Failed_this_job.
   * Archived files under '''archive'''
       * A '''YYYY/MM/DD/HH''' structure for per cycle data
        * ICMSHHARM+NNNN and ICMSHHARM+NNNN.sfx are atmospheric and surfex forecast output files
       * Verification input data under '''extract'''. This is also stored on the permanent disk /perm/$GROUP/$USER/HARMONIE/archive/$EXP/archive/extract
 * '''Data on ecgb'''
   * Working directory for the current cycle under '''YYYYMMDD_HH'''
   * On ecgb/cca log files per task are found under /cca/perm/ms/$COUNTRY/$USER/HARMONIE/my_exp. All logfiles are also gathered in html files named like e.g. HM_Date_YYYYMMDDHH.html which are archived in archive/log on ecgb.
   * Archived files under '''archive'''
       * A '''YYYY/MM/DD/HH''' structure for per cycle data
       * Verification data available on the permanent disk /cca/perm/$GROUP/$USER/HARMONIE/archive/$EXP/archive/extract
       * All logfiles under '''archive/log'''        
   * If you have the verification switched on you will find the working directory on '''ecgb:$SCRATCH/hm_home/$EXP/archive/extract/WebgraF'''
 * '''Data on ECFS'''
   * Since the disks on c2a/ecgb are cleaned regularly we need to store data permanently on ECFS, the EC file system, as well. There are two options for ECFS, ectmp and ec. The latter is a permanent storage and first one is cleaned after 90 days. Which one you use is defined by the ECFSLOC variable. To view your data type e.g.
{{{
 els ectmp:/$USER/harmonie/my_exp
}}}
   * The level of archiving depends on {{{ARSTRATEGY}}} in sms/config_exp.h. The default setting is medium which will give you one'''YYYY/MM/DD/HH''' structure per cycle data containing:
       * Surface analysis, ICMSHANAL+0000
       * Atmospheric analysis result MXMIN1999+0000
       * Blending between surface/atmospheric analysis and cloud variable from the first guess ANAB1999+0000
       * ICMSHHARM+NNNN and ICMSHHARM+NNNN.sfx are atmospheric and surfex forecast output files
       * PFHARM* files produced by the inline postprocessing
       * Logfiles in a tar file logfiles.tar
       * Observation database and feedback information in odb_stuff.tar.
   * Climate files are stored in the '''climate''' directory
   * One directory each for  '''vfld''' and '''vobs''' data respectively for verification data

[[Center(begin)]]
[wiki:HarmonieSystemDocumentation Back to the main page of the HARMONIE System Documentation]
[[Center(end)]]
----

[[Center(begin)]]
[[Disclaimer]]

[[Color(red, Last modified on)]] [[LastModified]]
[[Center(end)]]