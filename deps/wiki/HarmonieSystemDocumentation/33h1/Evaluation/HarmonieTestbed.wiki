[[Center(begin)]]
= '''The HARMONIE testbed''' =
[[Center(end)]]

The HARMONIE testbed provides a facility to run a number of well defined test cases using the existing script environment in HARMONIE. The ALADIN testbed,
[wiki:HarmonieSystemDocumentation/33h1/Evaluation/Mitraillette mitraillette] runs test on the hart of the model, the dynamical core. The HARMONIE testbed tests   the full script system as it is supposed to be used.
[[BR]]


== Defining the configurations ==

The testbed is a mSMS experiment that launches and follows new mSMS experiments one at a time in a controlled environment. The testbed experiment takes care of compilation and also hosts the climate files generated by the tested configurations. Source and scripts changes shall be done in the testbed experiment and will be synchronized to the child experiment using the hm_CMODS option in HARMONIE. 

Each test configuration is defined in 
[source:tags/harmonie-33h1/scr/Harmonie_testbed.pl Harmonie_testbed.pl] as the deviation from the default setup in 
[source:tags/harmonie-33h1/sms/config_exp.h config_exp.h]. With the current settings, a test of AROME with would look like.

{{{

   # AROME no 3DVAR
 	    'AROME' => {
 	      'ANAATMO'  => 'none',
 	      'ANASURF'  => 'none',
 	      'PHYSICS'  => 'arome',
 	      'SURFACE'  => 'surfex',
 	      'DYNAMICS' => 'nh',
 	      'DOMAIN'   => 'SWEDEN_SOUTH',
 	      'CLIMDIR'  => '$HM_DATA/../'.$ENV{EXP}.'/climate/arome_domain',
 	    },

}}}

The resulting output, in this case from ALADIN_RCR would look like:

{{{

 Harmonie_testbed.pl ALADIN_RCR
 Host  ecgate
 Input /home/ms/se/snh/harmonie_release/trunk//sms/config_exp.h 
 Output sms/config_exp.h 

 Change LL=${LL-06}                             to LL=6 
 Change ANAATMO=3DVAR                           to ANAATMO=none 
 Change ANASURF=CANARI                          to ANASURF=none 
 Change HOST_MODEL="ifs"                        to HOST_MODEL=hir 
 Change BDLIB=ECMWF                             to BDLIB=RCRa 
 Change BINDIR=$HM_DATA/bin                     to BINDIR=$HM_COMDAT/htb/bin 
 Change BUILD=yes                               to BUILD=no 
 Change CLIMDIR=$HM_DATA/climate                to CLIMDIR=$HM_DATA/../htb/climate/default 
 Change POSTP=no                                to POSTP=yes 
 Change PPTYPE=""                               to PPTYPE='pp md zz' 
 Change MAKEGRIB=no                             to MAKEGRIB=yes 
 
 ...

}}}


Host specific settings may also be defined to allow local changes of the test environment. In Harmonie_testbed.pl we find e.g. SMHI changes :

{{{

 'gimle' => {
   'DTG'        => '2008101212',
   'DTGEND'     => '2008101212',
   'LL'         => '06',
   'BUILD'      => 'no',
   'BINDIR'     => '$HM_DATA/../'.$ENV{EXP}.'/bin',
   'BDLIB'      => 'C22',
   'BDDIR'      => '/nobackup/smhid0/sm_uandr/data/C22',
   'OBDIR'      => '/nobackup/smhid0/sm_uandr/data/obs',
   'HOST_MODEL' => 'hir',
   'BRANCH'     => 'trunk',
   'MAKEGRIB'   => 'yes',
   'POSTP'      => 'yes',
   'PPTYPE'     => "\'pp md zz\'",
 },

}}}

The host dependent settings will be imposed on all configurations. If a setting in any configuration is in conflict with the host settings the configuration settings will be used.

[[BR]]

== The playfile ==

The playfile used for the testbed is 
[source:tags/harmonie-33h1/msms/testbed.tdf testbed.tdf]. Here each configuration is defined with a trigger, a task to create and one to follow the child experiments. Any defined configuration can be excluded by using the TESTBED_DONE environment variable in sms/config_exp.h

{{{
 TESTBED_DONE=":ALARO:ALADIN_NH:"
}}}

A test family looks like:

{{{
     family ALARO
 	iflike($ENV{TESTBED_DONE},:ALARO:)
 	        complete 1
 	endif
        trigger ( HIRALD == complete )
        task Create_exp
        task Follow_exp
           trigger ( Create_exp == complete )
      endfamily # ALARO
}}}

If the child experiment fails the Follow_exp task fails. When the child experiment problem has been corrected and the task restarted, the follow task should be restarted. When, finally, the child experiment is finished the test family will be completed and next test case will be triggered.

[[BR]]

== Starting the testbed ==

The testbed experiment is setup as any normal experiment with

{{{
Harmonie setup -r REVISION -h HOST
}}}

The testbed is launched by

{{{
Harmonie testbed 
}}}

For a new cycle or an updated trunk the first task of the testbed would be to compile the rootpack. This is done by running installation after setup and defining the proper GMKPACK variables.

{{{
Harmonie install
}}}



----

Last modified [[LastModified]]
