[[PageOutline]]
[[Center(begin)]]
= HARMONIE SCRIPTS =
[[LastModified]]
[[Center(end)]]
== Introduction ==

In the following we describe some of the scripts used in the HARMONIE mSMS-system.

== sms/config_exp.h ==

[source:tags/harmonie-33h1/sms/config_exp.h config_exp.h] includes the environment 
variables, which are used to control the experimentation. The following variables can be changed by the user.

=== Build options ===

 * ''BUILD_ROOTPACK'' Switch for building the rootpack when running HARMONIE install. Can be useful to turn off for debugging. (__yes__|no).
 * ''BUILD'' Switch for building your binaries (IFS and utilities) ( __yes__|no).


=== gmkpack settings ===

 * ''REVISION'' is the revision ( or cycle ) number, has to be set even for the trunk!
 * ''BRANCH'' sets the rootpack branch
 * ''VERSION'' is the version of revision/branch to use
 * ''OPTION'' sets which gmkpack/arch/SYSTEM.HOST.OPTION file to use
 * ''PROGRAM'' is the main MODEL program to be compiled with gmkpack
 * ''OTHER_PROGRAMS'' are other optional programs to be compiled with gmkpack


=== General paths ===

 * ''BINDIR'' is the path to executable directory.
 * ''WRK'' is the work directory. The suggested path at hpce is $TEMP/hm_home/${EXP}/$CYCLEDIR
 * ''ARCHIVE'' is the path to forecast file archive. __Note that on HPCE this directory is not permanent storage__!
 * ''EXTRARCH'' is the path to field extraction archive. __Note that on HPCE this directory is not permanent storage__!

 At ECMWF all files are transferred to ECFS by the script [source:tags/harmonie-33h1/scr/Archive_ECMWF Archive_ECMWF]. 
 There are two parameters for this archiving:
 * ''ECFSLOC'' Archiving site at ECMWF-ECFS  (__ectmp__|ec)
 * ''ECFSGROUP'' Group in which to chgrp the ECMWF archive, (__hirald__|default)


=== Climate settings ===

 * ''CREATE_CLIMATE'' Run climate generation (__yes__|no)
 * ''CLIMDIR'' is the path to climate files.
 * ''BDCLIM'' is the path to climate files corresponding the boundary files, when nesting ALADIN/AROME 
   inside ALADIN. When AROME is nested directly inside HIRLAM/IFS, the variable should point to 
   'intermediate' ALADIN climate file 
   (see [wiki:HarmonieSystemDocumentation/33h1/Scripts#Boundaryfilecreation Boundary file creation] and [wiki:HarmonieSystemDocumentation/33h1/Scripts#Intermediateclimatefile Intermediate climate file]).
 * ''SPSMORO'' High order spectral smoothing for orography (yes|__no__) This is still experimental


=== Boundaries ===

 * ''BDLIB'' is the experiment to be used as boundaries. Possible values, __ECMWF__ for IFS from MARS (default), __RCRa__ for HIRLAM-RCR from ECFS or __ALADIN experiment__. 
 * ''BDDIR'' is the boundary file directory. The possible date information in the path must be given by using UPPER CASE letters (YYYY=year,MM=month,DD=day,HH=hour,FFF=forecast length).  
 * ''BDSTRATEGY'' Which boundary strategy to follow (__same_forecast__|analysis_only|latest,available|RCR_operational) [#Boundarystrategies Read more]
 * ''BDINT'' is boundary interval in hours.


=== Assimilation ===

 * ''ANAATMO'' Atmospheric analysis (__3DVAR__|no)
 * ''ANASURF'' Surface analysis (__yes__|no)
 * ''OBDIR'' Path to directory with BUFR data. At ECMWF this is where you data extracted from MARS will be stored.

 More about assimilation settings can be found in [source:tags/harmonie-33h1/scr/include.ass include.ass ]


=== Nesting, dynamics and physics settings ===

 * ''HOST_MODEL'' defines the host model (boundaries).
   * hir for HIRLAM.
   * ald for ALADIN or ALARO.
   * ifs for ECMWF-IFS. 
 * ''TRGT_MODEL'' defines the model to be used in experiment.
   * ald for ALADIN or ALARO or if ''PHFLAG''=''hlm''
   * aro for AROME

 * ''FLAG'' is the model configuration flag, which defines the usage of both dynamics and physics. It controls the script system to find right namelist template (nam/namelist_fcst*) etc. Possible values of ''FLAG'':
   * ''ald_h'' for hydrostatic dynamics + ALADIN physics. (default)
   * ''ald_nh'' for non-hydrostatic dynamics + ALADIN physics.
   * ''arome'' for non-hydrostatic dynamics + MESO-NH physics.
   * ''alaro_h'' for hydrostatic dynamics + ALARO physics. 
   * ''ald_nh_sfx'' for non-hydrostatic dynamics + ALADIN physics with externalized surface scheme (SURFEX).

   * ''PHFLAG'' is the switch for HIRLAM physics. HIRLAM physics are switched on if ''PHFLAG''=__hlm__. HIRLAM physics can only be used together with ALADIN configurations (if ''FLAG'' = ''ald_h'' | ''ald_nh'' | ''ald_nh_sfx'').


=== Model domain settings ===

Several domains are predefined in config_exp.h 

 * ''TSTEP'' is model timestep in seconds
 * ''NLON'' is number of points in x-direction.
 * ''NLAT'' is number of points in y-direction.
 * ''BDNLON'' is number of points in x-direction for intermediate climate file. ''BDNLON'' > ''NLON''.
 * ''BDNLAT'' is number of points in y-direction for intermediate climate file. ''BDNLAT'' > ''NLAT''.

''NLON'' and ''NLAT'' should satisfy the equation 5^b^ * 3^d^ * 2^e^,
where a-e are integers >= 0.

 * ''EZONE'' is number of points over extension zone in both x- and y-direction. Default value 11. 
 * ''LONC'' is the longitude of domain centre in degrees.
 * ''LATC'' is the latitude of domain center in degrees.
 * ''LON0'' is the reference longitude of the projection in degrees.
 * ''LAT0'' is the reference latitude of the projection in degrees. __If ''LAT0'' is set to 90, the projection is '''polar stereographic'''. If ''LAT0'' < 90, the projection is '''lambert'''.___  
 * ''SINLAT0'' is sin(LAT0), this is meaningful only when running with SURFEX
 * ''ROT'' is an anticlockwise rotation in degrees, this is meaningful only when running with SURFEX
 * ''GSIZE'' is grid size in meters in both x- and y-direction.
 * ''VLEV'' is the name of the vertical levels
    * BOUNDARIES, same as the boundaries
    * ECMWF_60,HIRLAM_60,40 see definition in [source:tags/harmonie-33h1/scr/Vertical_levels.pl Vertical_levels.pl]

The default area is the Scandinavian domain. The following values for C+I zone and truncation are calculated in config_exp.h from the values above. 

 * ''NDLUXG'' is number of points in x-direction without extension (E) zone.
 * ''NDGUXG'' is number of points in y-direction without extension (E) zone.
 * ''NMSMAX_LINE'' is truncation order in longitude. By default (''NLON''-2)/2. 
 * ''NSMAX_LINE'' is truncation order in latitude. By default (''NLAT''-2)/2. 
 * ''NMSMAX_QUAD'' is truncation order in longitude. By default (''NLON''-2)/3. It is used to create filtered orography with lower resolution.
 * ''NSMAX_QUAD'' is truncation order in latitude. By default (''NLAT''-2)/3. It is used to create filtered orography with lower resolution.
 

=== Postprocessing and verification ===


 * ''POSTP'' is the switch for postprocessing by Fullpos (yes|__no__)
 * ''PPTYPE'' Postprocessing type, space separated list
    * pp = pressure levels
    * md = model level diagnostics
    * zz = height levels
    * sat = satellite radiances (AROME)
 
More options on postprocessing can be found in [source:tags/harmonie-33h1/scr/Postpp Postpp]

 * ''MAKEGRIB'' Conversion to GRIB (yes|__no__)
 * ''TOGRIB'' GRIB file types to be converted, space separated list
   * his = history (+ surfex) files
   * pp = pressure levels
   * md = model level diagnostics
   * zz = height levels

 * ''VERIFY'' Run verification (yes|__no__)
 * ''OBSEXTR'' Extract observations from BUFR (__yes__|no)
 * ''FLDEXTR'' Extract model data for verification from model files (__yes__|no)
 * ''USE_STNLIST'' Use predefined station list or use what is in the BUFR files (__yes__|no) If set to no the corresponding observation file has to be available
 * ''VERINT'' Verification interval in hours (01|03|06)
 * ''VER_SDATE'' Start verification date in format ($DTGBEG|YYYYMMDDHH)


 === Archiving ===

 * ''ARCHINT'' is archiving interval in hours.
 * ''TFLAG'' Time flag for model output. Hourly or minute-based output (__h__|min)
 * ''OUTINT'' Output interval in minutes. Used only if TFLAG="min".
 * ''REDUCELFI'' Reduced size of Surfex file (__yes__|no). Smaller file contains surface prognostic variables, but not the covers.
 * ''ARCHIVE_ECMWF'' Archive to $ECFSLOC at ECMWF (__yes__|no)



== Climate generation ==

=== Generation of a non SURFEX climate file at ECMWF ===
[source:tags/harmonie-33h1/scr/Climate Climate] is a script, which prepares climate file(s) for 
prefered forecast range. Climate files are produced for past, present and following month. The outline of '''Climate''' is as follows:

 * Check if climate files already exists.
 * Creation of namelists (for quadratic and linear gird). The definition of domain and truncation values is taken from [source:tags/harmonie-33h1/sms/config_exp.h config_exp.h].
 * Part 0: creation of __filtered orography__ by using quadratic grid with higher truncation. The resulting orography file must be renamed to __Neworog__. (default)

 An alternative way of preparing filtered orography is to use ''high order spectral smoothing for orography''.    This method is activated by setting ''SPSMORO=yes''. ''SPSMORO'' option is not well tested in HARMONIE.

 * Part 1: creation of __Neworog__ to target grid with lower truncation.
 * Part 2: generation of surface, soil and vegetation variables, without annual variation.
 * Part 3: creation of monthly climatological values and land-sea mask.
 * Part 4-9: creation of month specific data. 

 * Data: Climate database from ''HM_CLDATA''. ''HM_CLDATA'' is given in system configuration file, see the default path at ECMWF platform from [source:tags/harmonie-33h1/config-sh/config.ecgate config.ecgate].
 * Namelists: created in the script.
 * Executables: ''MODEL'', mandtg.
 * Output: climate files named as '''m01''', '''m02''' - '''m12''' and stored in ''CLIMDIR''.

__In order to run climate generation locally, one has to copy the climate database from ECFC directory ''HM_CLDATA''. See [source:tags/harmonie-33h1/config-sh/config.ecgate config.ecgate].__

Further reference [http://www.cnrm.meteo.fr/gmapdoc/spip.php?article29 Yessad (2008)]

=== Generation of climate files when SURFEX is used ===

The usage of SURFEX scheme sets some extra requirements for the climate file generation in the present HARMONIE system. Firstly, the SURFEX scheme and the atmospheric model are using __different__ climate/physiography files. Secondly, if the HARMONIE configuration with SURFEX is nested inside HIRLAM/IFS, an extra climate generation (for atmospheric model) is required.

The generation of the climate file for atmospheric model is performed the same way as in non-SURFEX case.

==== Intermediate climate file ====

In order to nest the HARMONIE with SURFEX to HIRLAM/IFS (see [wiki:HarmonieSystemDocumentation/33h1/Scripts#Boundaryfilecreation Boundary file creation]), an intermediate climate file is needed. The domain of this intermediate area must be slightly larger than the actual target domain. The size of the intermediate domain is given by ''BDNLON'' and ''BDNLAT'' (see [wiki:HarmonieSystemDocumentation/33h1/Scripts#Modeldomainsettings Model domain settings]).

The intermediate climate generation uses the same [source:tags/harmonie-33h1/scr/Climate Climate] script but it is launched from mSMS-task [source:tags/harmonie-33h1/sms/ClimateInter.sms ClimateInter] with different  input parameters.

The climate files for intermediate domain are named as '''m01''', '''m02''' - '''m12''' and are stored in ''BDCLIM'' directory

==== Preparation of SURFEX physiography file ====

The generation of SURFEX physiography file ('''PGD.lfi''') is done in [source:tags/harmonie-33h1/scr/Prepare_pgd Prepare_pgd]. [source:tags/harmonie-33h1/scr/Prepare_pgd Prepare_pgd] creates the namelist __PRE_PGD1.nam__ based on the ''DOMAIN'' settings in [source:tags/harmonie-33h1/sms/config_exp.h config_exp.h]. 

The data base for SURFEX-file preparation is located at HPCE:
 * /hpce/ms_perm/mesonh_data/PGD/ecoclimats_v2.*
 * /hpce/ms_perm/mesonh_data/PGD/gtopo30.* 
 * /hpce/ms_perm/mesonh_data/PGD/sand_fao.*
 * /hpce/ms_perm/mesonh_data/PGD/clay_fao.*

The output is one SURFEX physiography file ('''PGD.lfi'''), which is stored in ''CLIMDIR'' directory.

__In order to try PGD generation locally, one has to copy the climate database from HPCE directory ''MESONH_DATA''. See [source:tags/harmonie-33h1/config-sh/config.ecgate config.ecgate].__

== Boundary file preparation ==

Boundary file preparation includes two parts: forecast file fetching and boundary file creation.

=== Boundary strategies ===

The current implemented boundary strategies are the following

 * same_forecast: Use all boundaries from the same forecast, start from an analysis 
 * analysis_only: Use only analyses as boundaries
 * latest       : Use the latest possible with the shortest forecast length
 * available    : Same as latest, but here BDDIR is searched for the files
 * RCR_operational : Mimic the behaviour of the RCR runs, ie
                 *  12h old boundaries at 00 and 12 and
                 *  06h old boundaries at 06 and 18


The script Boundary_strategy.pl creates a file bdstrategy that could look like:

{{{
 Boundary strategy

       DTG: 2007020100
        LL: 06
     BDINT: 3
   BDCYCLE: 6
  STRATEGY: same_forecast
     BDDIR: /hpce/tmp/ms/se/snh/hm_home/alex_33h1/ECMWF/archive/YYYY/MM/DD/HH
HOST_MODEL: ifs
 EXT_BDDIR:
EXT_ACCESS: Get_ec2aladin

 000|2007020100 /hpce/tmp/ms/se/snh/hm_home/alex_33h1/ECMWF/archive/2007/02/01/00/fc20070201_00+000 Get_ec2aladin 2007020100 0
 003|2007020103 /hpce/tmp/ms/se/snh/hm_home/alex_33h1/ECMWF/archive/2007/02/01/00/fc20070201_00+003 Get_ec2aladin 2007020100 3
 006|2007020106 /hpce/tmp/ms/se/snh/hm_home/alex_33h1/ECMWF/archive/2007/02/01/00/fc20070201_00+003 Get_ec2aladin 2007020100 6
 ...

}}}

Meaning that the if the boundary file is not found under BDDIR the command {{{Get_ec2aladin YYYYMMDDHH LLL BDDIR}}} will be executed. A local interpretation could be to search for external data if your file is not on BDDIR. Like the example from SMHI:

{{{
 Boundary strategy

       DTG: 2008081900
        LL: 06
     BDINT: 3
   BDCYCLE: 6
  STRATEGY: same_forecast
     BDDIR:/nobackup/smhid0/sm_uandr/hm_home/arome_main_33h1/G05/archive/YYYY/MM/DD/HH
HOST_MODEL: hir
 EXT_BDDIR: bore:/nobackup/prod3/hirlam/hirlam-7.1.2/G05/YYYY/MM/DD/HH
EXT_ACCESS: scp

000|2008081900 /nobackup/smhid0/sm_uandr/hm_home/arome_main_33h1/G05/archive/2008/08/19/00/an20080819_00+000 scp bore:/nobackup/prod3/hirlam/hirlam-7.1.2/G05/2008/08/19/00/an20080819_00+000
}}}

In this example an scp from bore will be executed if the expected file is not in BDDIR. [source:tags/harmonie-33h1/scr/Boundary_strategy.pl Read more in the in-code documentation]. The bdstrategy file is parsed by the script ExtractBD. 

 * [source:tags/harmonie-33h1/scr/ExtractBD ExtractBD] Checks if data are on ''BDDIR'' otherwise copy from EXT_BDDIR. 
   The operation performed can be different depending on HOST and HOST_MODEL. IFS data at ECMWF are extracted from MARS, RCR data are copied from ECFS.
   * Input parameters: Forecast hour
   * Executables: none.

=== Boundary file creation ===

Boundary files (coupling files) for ALADIN/AROME are prepared in six different ways depending on the 
nesting procedure defined by  ''HOST_MODEL'' and ''TRGT_MODEL'' [wiki:HarmonieSystemDocumentation/33h1/Scripts#smsconfig_exp.h config_exp.h].

 * [source:tags/harmonie-33h1/scr/hir2ald hir2ald] creates boundary file (FA) for ALADIN from HIRLAM/IFS file (GRIB). ifs2ald is a link to hir2ald.
   * Input parameters: Forecast hour.
   * Data: HIRLAM/IFS forecast file, ALADIN climate file (for target geometry).
   * Executables: gl, mandtg
   * Output: Boundary files (ELSCF*).

 * [source:tags/harmonie-33h1/scr/Prep_ini_surfex Prep_ini_surfex] creates an initial SURFEX primarly for AROME from an ALADIN file. The initial file is produced by [http://www.cnrm.meteo.fr/gmapdoc/spip.php?rubrique6 Fullpos], which is included in ALADIN/AROME executable. 
   * Input parameters: Forecast hour.
   * Data: ALADIN forecast file, ALADIN climate file for both target and boundary geometry, Surfex climate file for the target geometry.
   * Namelists: namelist_ald2$arome_0_default
   * Executables: AROMODB, mandtg.
   * Output: a surfex initial file, SURFXINI.lfi.

 * [source:tags/harmonie-33h1/scr/ald2aro ald2aro] creates boundary file for ALADIN/AROME from a synoptic-scale ALADIN file. The boundary file is produced by [http://www.cnrm.meteo.fr/gmapdoc/spip.php?rubrique6 Fullpos], which is included in ALADIN/AROME executable. Environment variable ''FLAG'' controls whether the boundary file is for hydrostatic or non-hydrostatic ALADIN or AROME. ald2ald is a link to ald2aro.
   * Input parameters: Forecast hour.
   * Data: ALADIN forecast file, ALADIN climate file for both target and boundary geometry.
   * Namelists: namelist_ald2$ald_h_default or namelist_ald2$ald_nh_default or namelist_ald2$arome_N_default
   * Executables: AROMODB, mandtg.
   * Output: Boundary files (ELSCF*).

 * [source:tags/harmonie-33h1/scr/hir2aro hir2aro] creates boundary file for AROME from HIRLAM/IFS file. Firstly, the HIRLAM/IFS file (GRIB) is converted to ALADIN file (FA) by using gl. Secondly, the ALADIN file is converted to AROME file by using [http://www.cnrm.meteo.fr/gmapdoc/spip.php?rubrique6 Fullpos]. __This procedure is not an ideal. The information from HIRLAM's tiled surface scheme is not fully utilized and some information may be lost__! ifs2aro is a link to hir2aro
   * Input parameters: Forecast hour.
   * Data: HIRLAM/IFS forecast file, ALADIN climate file 'intermediate' step (in ''BDCLIM''), ALADIN climate file for target geometry
   * Namelists: namelist_ald2$arome_0_default and namelist_ald2$arome_N_default. 
   * Executables: gl, AROMODB, mandtg.
   * Output: Boundary files (ELSCF*)



== Forecast ==

[source:tags/harmonie-33h1/scr/Forecast Forecast] is the script, which initiates actual 
forecast run (ALADIN/AROME/ALARO depending on ''FLAG'' and ''PHFLAG'').

 * Input parameters: none.
 * Data: Boundary files ('''ELSCF*'''-files). Initial file ('''fc_start'''). If data assimilation is used, '''fc_start''' is the analysis file. In case of dynamical adaptation, '''fc_start''' is the first boundary file. In case of AROME, Surfex initial file ('''SURFXINI.lfi''') is also needed ([source:tags/harmonie-33h1/scr/Prep_ini_surfex Prep_ini_surfex]). 
 * Namelists: namelist templates nam/namelist_fcst${FLAG}_default are fetched based on ''FLAG'' and ''PHFLAG''. The templates are completed in [source:tags/harmonie-33h1/scr/Forecast Forecast] based on the choices of ''NPROCX'', ''NPROCY'' (see [source:tags/harmonie-33h1/config-sh/submit.ecgate submit.ecgate]), ''TFLAG'', ''OUTINT'', ''BDINT'' and ''REDUCELFI''. In case of AROME also the namelists to control SURFEX-scheme  ([source:tags/harmonie-33h1/nam/TEST.des TEST.des] and [source:tags/harmonie-33h1/nam/EXSEG1.nam EXSEG1.nam]) are needed.
 * Executables: as defined by ''MODEL''.
 * Output: Forecast files (spectral files '''ICMSHALAD+*'''). In case of AROME, Surfex files containing the surface data ('''AROMOUT_*.lfi'''). 

=== Forecast namelists ===

The current switches in the HARMONIE system (in [source:tags/harmonie-33h1/sms/config_exp.h config_exp.h]) provide only very limited possibility to control the different aspects of the model. If the user wants to have more detailed control on the specific schemes etc., one has to modify the variety of the namelists options.

In general, the different namelist options are documented in the source code modules (e.g. src/arp/module/*.F90). Below is listed information on some of the choices.   

__NH-dynamics/advection/time stepping__:

 * A detailed overview of the such options has been given by [http://www.cnrm.meteo.fr/gmapdoc/spip.php?article189 Vivoda (2008)]. 
 
__Physics switches__

 * Switches related to different schemes of ALADIN/ALARO physics, [source:tags/harmonie-33h1/src/arp/module/yomphy.F90 yomphy.F90].
 * Switches related to physics schemes in AROME [source:tags/harmonie-33h1/src/arp/module/yomarphy.F90 yomarphy.F90].
 * Switches to tune different aspects of physics, [source:tags/harmonie-33h1/src/arp/module/yomphy0.F90 yomphy0.F90], [source:tags/harmonie-33h1/src/arp/module/yomphy1.F90 yomphy1.F90], [source:tags/harmonie-33h1/src/arp/module/yomphy2.F90 yomphy2.F90] and [source:tags/harmonie-33h1/src/arp/module/yomphy3.F90 yomphy3.F90]
 * Switches related to HIRLAM physics, [source:tags/harmonie-33h1/src/arp/module/yhloption.F90 yhloption.F90] and [source:tags/harmonie-33h1/src/arp/setup/suhloption.F90 suhloption.F90].

__Initialization switch__

 * Initialization is controlled by namelist ''NAMINI/NEINI'', [source:tags/harmonie-33h1/src/arp/module/yomini.F90 yomini.F90].

__Horizontal diffusion switches__

 * Horizontal diffusion is controlled by namelist ''NAMDYN/RDAMP*'', [source:tags/harmonie-33h1/src/arp/module/yomdyn.F90#L55 yomdyn.F90]. Larger the coefficient, less diffusion.

__MPP switches__

 * The number of processors in HARMONIE are given in [source:tags/harmonie-33h1/config-sh/submit.ecgate submit.HOST]. These values are transfered in to [source:tags/harmonie-33h1/src/arp/module/yomct0.F90#L276 yomct0.F90] and [source:tags/harmonie-33h1/src/arp/module/yommp.F90 yommp.F90].

__SURFEX switches__

 * Surefex scheme is controlled through namelists [source:tags/harmonie-33h1/nam/TEST.des TEST.des] and [source:tags/harmonie-33h1/nam/EXSEG1.nam EXSEG1.nam]. The different options are described in [http://mesonh.aero.obs-mip.fr/mesonh/doc.html Externalized Surface User's guide].

== Archiving ==

Archiving has a two layer structure. Firstly, all the needed analysis forecast and field extract files  
are stored in ''ARCHIVE'' directory by [source:tags/harmonie-33h1/scr/Archive_fc Archive_fc]. This is the 
place where the postprocessing step expects to find the files. 

At ECMWF all the requested files are stored to ECFS into directory ''ECFSLOC'' by the script [source:tags/harmonie-33h1/scr/Archive_ECMWF Archive_ECMWF]

== Field extraction ==

[source:tags/harmonie-33h1/scr/Run_fldver Run_fldver]. This script goes through all forecast files and 
collects all the variables (T2m, V10m, mean sea level pressure, RH2m, Q2m, total cloudiness, precipitation + profiles) 
needed in basic verification.

 * Input parameters: none.
 * Data: Forecast files.
 * Namelists: Station lists for surface data (ewglam.list) and radiosounding data (temp.list).
 * Executables: fldextr.
 * Output: Field extraction files (vfld${EXP}${DTG}), which are placed in ''EXTRARCH''.

== Extract observations ==

[source:tags/harmonie-33h1/scr/FetchOBS FetchOBS] scripts takes care of the observation 
extraction for verification. First, the observation BUFR-file is fetched from the MARS ('''ExtractVEROBSfromMARS'''), 
then all the needed data is extracted from the BUFR-files.

 * Input parameters: none.  
 * Data:  Station lists for surface data (ewglam.list) and radiosounding data (temp.list). These shoud be found from ''SCRDIR''  
 * Executables: mars, obsextr.  
 * Output: Field extraction files (vobs*), which are placed in ''EXTRARCH''.

== Fullpos postprocessing ==

Fullpos is a postprocessing package, which is part of the 
common ARPEGE/IFS cycle. Fullpos is documented by [http://www.cnrm.meteo.fr/gmapdoc/spip.php?article17 El Khatib (2002)] and [http://www.cnrm.meteo.fr/gmapdoc/spip.php?article157 Yessad (2008)].

[source:tags/harmonie-33h1/scr/Postpp Postpp] script takes care about ''Fullpos'' postprocessing in HARMONIE system.   At the moment, postprocessing is performed at the end of each forecast cycle. [source:tags/harmonie-33h1/scr/Postpp Postpp] handles all the requested ''PPTYPE''s from one hour period. In case of hourly output and one ''PPTYPE'' only, Postpp executes ''Fullpos'' only once.

 * ''POSTP'' switch in [source:tags/harmonie-33h1/sms/config_exp.h config_exp.h] activates ''Fullpos''. __Fullpos in HARMONIE is available only when ''FLAG''= '''ald_h''' | '''ald_nh''' | '''arome'''__ !
 * [wiki:HarmonieSystemDocumentation/33h1/Scripts#Postprocessingandverification Postprocessing types].

 * Input parameters: none.
 * Input data:   
   1. Forecast files ('''ICMSHALAD+*''') from directory ''WRK''.
   2. Climate files for both input and output geometry ('''m01''','''m02'''...'''m12'''). For now, postprocessing has been performed only  in the same forecast grid. Therefore input and output climate files are identical. 
   3. In case of satellite radiances (''PPTYPE''='''sat'''), ''Fullpos'' needs information from satellite coefficient files ('''rtcoef*.dat''' see e.g. [source:tags/harmonie-33h1/const/sat_const/rtcoef_noaa_17_amsua.dat rtcoef_noaa_17_amsua.dat]).
 * Namelists: namelist templates nam/namelist_pp${FLAG}_default are fetched based on ''FLAG''. The templates are completed in [source:tags/harmonie-33h1/scr/Postpp Postpp] based on the choices made in ''NPROCX'', ''NPROCY'' (see [source:tags/harmonie-33h1/config-sh/submit.ecgate submit.ecgate]) and ''PPTYPE''.
 * Executables: as defined by ''MODEL''.
 * Output data: Postprocessed, spectral files ('''PFALADALADIN+*[md|pp|zz|sat]''') are stored to ''ARCHIVE'' directory.

=== Fullpos namelists ===

The current postprocessing switches in the HARMONIE system (in [source:tags/harmonie-33h1/sms/config_exp.h config_exp.h]) provide only very limited possibility to control the variety of the aspects in ''Fullpos''. Currently, in different ''PPTYPE'' modes parameter lists, postprocessed domain and requested levels are fixed in  [source:tags/harmonie-33h1/scr/Postpp Postpp]. Below is part of  [source:tags/harmonie-33h1/scr/Postpp Postpp], which defines postprocessed parameters and requested pressure levels in case of ''FLAG''='''arome''' and ''PPTYPE''='''pp'''.

{{{
   if [ $FLAG = "arome" ] ; then
    if [ $TYPE = "pp" ] ; then
cat << EOF > variables
   CFP3DF='GEOPOTENTIEL',     'TEMPERATURE', 'VENT_ZONAL',  'VENT_MERIDIEN', 
          'HUMI_RELATIVE',    'THETA_PRIM_W','PRESSURE',    'ABS_VORTICITY', 
          'VITESSE_VERTICALE','TEMPE_POTENT','POT_VORTICIT','SIM_REFLECTI',
          'RAIN',             'GRAUPEL',     'SNOW',        'CLOUD_WATER',
          'ICE_CRYSTAL',      'VERT.VELOCIT','DIVERGENCE',  'HUMI.SPECIFI',
   CFP2DF='SURFPRESSION',     'MSLPRESSURE', 'SURFTOT.WAT.VAPO',
          'SURFISOT0.MALTIT', 'SURFISOTPW0.MALT','SURFISOTM10.MALT',
   CFPPHY='SURFTEMPERATURE',  'INTSURFGEOPOTENT',
   CFPXFU='CLSTEMPERATURE',   'CLSVENT.ZONAL',   'CLSVENT.MERIDIEN',
   RFP3P=10000., 15000., 20000., 25000., 30000., 40000.,
   50000., 60000., 70000., 80000., 85000., 90000.,
   92500., 95000., 100000.,
EOF
}}}

In the ''Fullpos'' namelist '''NAMFPC''' (variables explained in [source:tags/harmonie-33h1/src/arp/module/yomfpc.F90 yomfpc.F90]), the variables are placed into different categories:

 * '''CFP3DF''' = names 3D dynamics fields to compute.
 * '''CFP2DF''' = names 2D dynamics fields to compute.
 * '''CFPPHY''' = names of physical fields to be postprocessed.
 * '''CFPXFU''' = names of instantaneous fluxes fields to be postproc.
 * '''CFPCFU''' = names of cumulated fluxes fields to be postproc.

Postprocessing can also be done in various type of levels:

 * '''RFP3P''' = postprocessing pressure levels
 * '''RFP3H''' = postprocessing height (above orography) levels.
 * '''RFP3TH''' = postprocessing potential temperature levels.
 * '''RFP3PV''' = postprocessing potential vorticity levels.

The default FA-names for parameters in different categories can be found from [source:tags/harmonie-33h1/src/arp/setup/suafn1.F90#L687 suafn1.F90]. The list of HARMONIE's output variables are  given also in [wiki:HarmonieSystemDocumentation/33h1/Forecast/Outputlist].
 
== File conversion ==

HIRLAM community is more used to deal with the GRIB-files. Therefore, the forecast files (FA) are converted 
to GRIB-files by [source:tags/harmonie-33h1/scr/Makegrib Makegrib]. By default, '''Makegrib'''
removes biperiodic zone from ALADIN files and creates GRIB-file in native (Lambert) projection.
The data in GRIB-file could be also interpolated into different projections, more information 
source:tags/harmonie-33h1/util/gl/README

 * Input parameters: Forecast hour.
 * Data: ALADIN/AROME forecast FA-file.
 * Namelists: none.
 * Executables: gl.
 * Output: GRIB-file (fc${DTG}+${LL}grib), which is stored in ''ARCHIVE'' directory.

