[[PageOutline]]
[[Center(begin)]]
= '''Hirlam Climate generation system''' =
[[Center(end)]]

[[Center(begin)]]
== '''Overview of the relevant issues''' ==
[[Center(end)]]
 1. HIRLAM climate generation prepares physiographic data on basis of
    *  GTOPO30 digital elevation
    *  GLCC land cover
    *  FAO soil data
    *  US-NAVY low resolution global data
 1. The data utilized in the climate generation has been converted onto a uniform grid and is stored in HDF4 format (HDF data base, hdfdb)
 1. There exist an HDF data base for HIRLAM version 7.0 and one for 7.1. The data bases are NOT administrated by subversion (yet?). They are available on ECFS under
{{{
    ec:/hirlam/dat/hdfdb-7.0
    ec:/hirlam/dat/hdfdb-7.1
}}}
 1. There are different [https://hirlam.org/trac/wiki/HirlamSystemDocumentation/Configure/ClimateGeneration sets of HDF files] available in each of the HDF data bases
    There is an [https://hirlam.org/trac/wiki/HirlamHowto/Install/General#WhatisanHDFSETandwherecanIfindtheHDFsets HowTo] with details for local use.
 1. During climate generation, all working files for data use HDF4 format, an HDF2GRIB converter is used at the final step
 1. The preparation of fields for the ISBA scheme is done after the climate generation. It does not exploit all available information from the climate generation


 
[[Center(begin)]]
=== '''Implementation, data flow''' ===
[[Center(end)]]

 1. HDF data base
 1. field aggregation: HDF working files
 1. HDF to GRIB conversion
 1. preparation of ISBA fields
 1. Hirlam climate generation file in GRIB


[[Center(begin)]]
== '''Relevant code and scripts''' ==
[[Center(end)]]
 * climate generation is written in C, only the HDF2GRIB converter (hdf2asim) is in FORTRAN
 * The relevant source codes are:
{{{
   ctopo_s.c
   ctopo_sub.c
   ctopo_pp_fields.c
   hdf2asim.F
   hdfattr.c
   hdfsds.c
   hdfutil.c
   hdfview_s.c
   gen.c
   calc_alb_s.c
   polar.c
}}}
   The hdfg directory includes some code from the simple surface scheme, still ('z0combine.c')
 * The relevant scripts for the climate generation are
{{{
   Env_expdesc
   Env_domain
   Climate
   Preps_ISBA
   Preps_simple
}}}


[[Center(begin)]]
== '''What's new in 7.0''' ==
[[Center(end)]]

 * The 7.0 version of the climate generation does not differ from the 6.4.4 version
 * However, the location of the HDF data base has changed under ECFS


[[Center(begin)]]
== '''What's new in 7.1''' ==
[[Center(end)]]

 * HDF data base includes fields of orography derivatives for sub-grid orography processing
 * aggregation of MF-MSO (mesoscale sub-grid orography) parameters
 * aggregation of SSO (small-scale sub-grid orography) parameters
 * grid-scale option in ctopo
 * option to change aggregation area shape (beta state)


[[Center(begin)]]
== '''Relevant namelists, tunables''' ==
[[Center(end)]]

 * In Env_expdesc, one can
   * modify the HDF data base to be used
{{{
  HDFSET = 9000
  HIRES  = 0.025
}}}
   * in version 7.1, modify setting for the band-pass filter used in MSO parameter aggregation
{{{
  MSO_BPF_HIGH=0.025      # MSO param. aggr. B-P filter: Upper limit (degrees)
  MSO_BPF_LOW=4           # MSO param. aggr. B-P filter: Lower limit (grid units)
}}}
   * other important variables
{{{
  CLEXP                   # climate experiment name
  CLDIR                   # climate files storage directory
  HL_CLDATA               # scratch storage of HDF files
}}}


[[Center(begin)]]
== '''Monitoring subjects, tools''' ==
[[Center(end)]]

The main means of checking the climate generation process

 * check the log file: any text or html pager/browser
 * view data in the HDF file (e.g. 'cl00010000.hdf'): 'HDFLook', 'hdfview'
 * check the content of the final GRIB file: 'GRIBEX', 'wgrib', 'cdo'

[[Center(begin)]]
== '''Common warnings and error messages''' ==
[[Center(end)]]

=== '''Warnings''' ===

 * if the log file shows the following warning
{{{
  Warning: field 'foo' is empty
}}}
   then you probably have a coverage problem

=== '''Errors''' ===

 * input data not found
{{{
  FATAL ERROR, can't open <file>
  FATAL ERROR, can't find <file>
}}}

 * wrong input data
{{{
  FATAL ERROR, can't read dataset <dataset>
}}}

 * memory problems
{{{
  FATAL ERROR, memory allocation failed (<variable>)
  FATAL ERROR, SDS data memory allocation failed
  FATAL ERROR, SDS dim memory allocation failed
}}}


[[Center(begin)]]
== '''Overhaul issues, questions''' ==
[[Center(end)]]
 * more strictness in ctopo (is a (partly) empty field not an error?)
 * The final output GRIB files contain a lot of redundant data
 * some fields are meaningless 
   * sea-surface roughness is just one single constant
   * some ISBA fields are just set to 99
 * HDF4 towards HDF5?

