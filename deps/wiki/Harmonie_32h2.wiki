[[PageOutline]]
[[Center(begin)]]
== '''HARMONIE 32h2''' ==
(Tagged on Oct 5 2007)
[[Center(end)]]

== Highlights of Harmonie 32h2 ==
HARMONIE is the acronym for Hirlam's meso-scale forecast system (Hirlam Aladin Regional/Meso-scale Operational NWP In Europe). The HARMONIE system is the product of the HIRLAM-ALADIN joint project HARMONIE: Hirlam-Aladin Research towards Meso-scale Operational NWP in Europe.

Harmonie 32h2 is the HIRLAM-adapted ARPEGE/IFS system Cycle 32t2, including its subsequent patches and HIRLAM's local modifications and additions, such as scripts and utilities developed in HIRLAM community. 
 * The main source code in 32h2 are the same as in Cycle 32t2, including some of the recent contributions of HIRLAM staffs, such as harmonisation of physics package HIRALD with that of the reference Hirlam 7.1 physics. In addition, an optional high order spectral smoothing scheme for orography, and a HIRALD adaptation interface to couple to SURFEX is included in 32h2.
 * With 32h2, the recommended way for users to build and run Harmonie experiments on the ECMWF reference platform have been changed significantly, in which a master pack for the released 32h2 code is available on /hpce/ms_perm/hirlam/harmonie/pack/ directory, and the complete code is available on /hpce/ms_perm/hirlam/harmonie_release/harmonie-32h2. This will eliminate needs to involve Subversion comand and dual platform (ecgate and HPCE) as has been recommended before. 

== Harmonie-32h2 System ==
Harmonie-32h2 contains following components:
 * __source code__: a copy of, plus updates on, the ARPEGE/IFS Cycle 32t2. The two main patches in 32h2 as developed in HIRLAM are:
  * high order spectral smoothing of orography (Hortal, [5405]). The orography field used by the ALADIN community is truncated in spectral space to the resolution corresponding to the quadratic grid and a special procedure is applied to reduce the orographic ripples over sea at the expense of the representation of the orography over land. Studies carried out at ECMWF have shown that a better representation of the orography (reducing noise at the lowest model levels without degrading too much the resolution represented in the orography field) is obtained by keeping all the scales representable with the linear grid but reducing the amplitude of the shortest scales in a very scale-selective way, by applying the equivalent to a diffusion operator of order 16. The scheme is introduced as a non-default option.
  * An interface to connect HIRLAM physics with SURFEX (Sass, [5416]). Explicit momentum fluxes have been proposed for the HIRLAM physics package within IFS, as a contrast to the Meteo France implicit scheme. This is believed to be necessary at present for HIRLAM, since the implicit scheme part is done elsewhere in the context of HIRLAM turbulence computations.
 * __scripts__: the scripts used to prepare, perform and post-process Harmonie forecasts, with refrence patform on the ECMWF HPCE, for various configuration options
  * forecast model with hydrostatic or nonhydrostatic dynamics
  * generation of climate constants
  * physical parameterisation with ALADIN, ALARO, HIRLAM physics (HIRALD) or AROME physics
  * model domain, resolution, forecast length, coupling method etc.
 * __namelists__: namelists used to define experiment configuration
 * __utilities__: which include
  * the Meteo France compilation tool, GMKPACK, for building the executible
  * tools to prepare and convert data files
  * tools for carrying out monitoring, post-processing and graphic display

In ALADIN webpage, there are numerous [http://www.cnrm.meteo.fr/gmapdoc/spip.php?rubrique1 useful and comprehensive
documentation] about the system 32t2. For beginners, an simple overview wiki page[wiki:HarmonieSystemDocumentation/Source about the basic source code structure as contained in Harmonie-32h2] is given.

== Harmonie-32h2 source code downloads ==

 * harmonie-32h2 release can be obtained via Subversion command
{{{
   svn co https://svn.hirlam.org/tags/harmonie-32h2
}}}
 * On ECMWF, export version (the checkout of the source code with Subversion export command) of the harmonie-32h2 is available,
{{{
   ecgate:/home/ms/dk/nhz/harmonie_release/32h2  # on ecgate
   hpce:/ms_perm/hirlam/harmonie_release/32h2    # on hpce
}}}
 * The export tarball of the harmonie-32h2 is available on ECMWF:ecgate as /scratch/ms/dk/nhz/harmonie-32h2.tar.gz, or on ECFS: ec:/hirlam/src/tar/harmonie-32h2.tar.gz

== Setting up and performing experiments with Harmonie-32h2 ==

Hirlam is in the process of extending mini-SMS job control and scheduling system to HARMONIE system. As a part of the ongoing efforts toward that direction, the recommended build and run procedure for setting up HARMOINE experiment on the ECMWF reference platform has been simplified in 32h2, compared to the previous system. The simplification assumes existence of a reference master pack in the HPCE directory /ms_perm/hirlam/harmonie/pack for 32h2, and a correspondence between source and scripts/namelists. With these changes, the build process no longer involve use of revision control (thus the dependence on Subversion client), hence no need to use dual platforms (ecgate and HPCE) for the build purpose. 
=== Set environment variales suitable for the intended HARMONIE experiment ===
Before working with HARMONIE system, it is recommended to define in your startup file ({{{$HOME/.user_profile}}} on HPCE several environment variables, which are needed in HARMONIE build (using gmkpack) and scripts.
{{{
 export ROOTPACK=/ms_perm/hirlam/harmonie/pack/              # location of HARMONIE master pack
 export HOMEPACK=$HOME/HARMONIE/pack                          # location of experiment configuration/local pack directory
 export HOMEBIN=$TEMP/HARMONIE/pack                           # location of executibles 
 export GMKROOT=/ms_perm/hirlam/harmonie/pack/util/gmkpack    # location of utility gmkpack
 export GMKFILE=IBMP690.HPCE                                  # computer architecture as supported in build tool gmkpack
 export GMKTMP=$TEMP/gmktmp                                  
 export PATH=$PATH:$GMKROOT/util
 export MANPATH=$MANPATH:$GMKROOT/man
}}}
Remember to source it afterwards, or alternatively log out from HPCE and log in again.
=== Build HARMONIE local (target) pack on HPCE ===
For convenience, you are recommended to build at least one target pack per HARMONIE release in which the main executibles and utilities needed for HARMONIE experiments are built and collected.
 1. create target pack in order to build the AROME executable "AROMODB". The following command produce a directory $HOMEPACK/$your_exp
{{{
  cd $HOMEPACK
  gmkpack -r 32h2 -u $target_pack_dir -p aromodb      # e.g., $target_pack_dir=32h2_aladin
}}}
 1. include, if applicable, local source code updates 
{{{
  cd $HOMEPACK/$target_pack_dir
  cd src/local; cp $local_updates_of_HARMONIE_source_of_your_own $individual_harmonie_src_directory   # port local source code updates
}}}
 1. build HARMONIE libraries and executables, which typically takes a couple of minutes provided no major local code revision is done. The result is an executable AROMODB in $HOMEPACK/$target_pack_dir/bin/.
{{{
  cd $HOMEPACK/$target_pack_dir
  llsubmit ics_aromodb
}}}
 1. build other utilities, including those needed for regular HARMONIE monitoring and verification
{{{
  cd $HOMEPACK/$target_pack_dir
  mkdir util; cp -r /ms_perm/hirlam/harmonie_release/32h2/util/gl util
  cd util/gl; ./gmake
}}}
 1. link HARMONIE utilities to $HOMEBIN directory to finish the build
{{{
  cd $HOMEBIN
  ln -sf $HOMEPACK/$target_pack_dir/util/gl/ibmecmwf/bin/* .
}}}

=== Configure experiment using HARMONIE scripts ===
After having created a target pack under $HOMEPACK/$target_pack_dir, HARMONIE experiment can be started in directory $HOMEPACK/$exp_dir. Note that $expdir here can be the same as $target_pack_dir or different.
 1. copy the necessary scripts and namelists
{{{
 cd $HOMEPACK/$exp_dir
 cp -r /ms_perm/hirlam/harmonie_release/32h2/scr .
 cp -r /ms_perm/hirlam/harmonie_release/32h2/nam .
}}}
 1. make local modifications on scripts. The reference scripts specified experiment date in script Start_harmonie for shell variables {{{STARTDTG}}} and {{{ENDDTG}}}. In the configuration script Env_expdesc, it assumes the run to be for SCANDINAVIA area at 11 km resolution taking boundaries from the reference HIRLAM runs at ECMWF, RCRa. The run is in hydrostatic mode, using ALADIN physics package. It is likely that you need to do at least minimum modifications for your purpose, such as 
  * Edit Change_exp to make sure the hard-coding for $exp_dir is updated.
  * Env_expdesc. Most likely you need to edit the script to choose the right configuration for your experiment, such as domain, physics, timestepping etc. If your $exp_dir is not same as the $target_pack_dir, you need to point BINDIR to $target_pack_dir
  * Start_harmonie. Choose the experiment date etc.
  * Run_harmonie. Choose suitable nr of node/tark_per_node/memory etc.
 1. Launch the experiment
{{{
 $ ./Start_harmonie
}}}
 1. When the experiment has terminated successfully you can find the results in your target packs temporary storage and in your storage on ''ecfs''.
{{{
 $ ls $TEMP/HARMONIE/$exp_dir/wrk/<yyyymmddhhii>
 $ ls $TEMP/HARMONIE/$exp_dir/archive/<yyyymmddhhii>
 $ ls $TEMP/HARMONIE/$exp_dir/archive/extract
 $ els ec:HARMONIE/$exp_dir/<yyyymmddhhii>
}}}
=== Make an ALADIN forecast coupled to HIRLAM RCR ===
The following shell variables should be set in {{{Env_expdesc}}}:
{{{
 EXP=<exp_dir>
 BDLIB=RCRa
 TSTEP=300
 FLAG=ald_h
 HOST_MODEL=hir
 TRGT_MODEL=ald
 DOMAIN=<your_aladin_11km_domain>
}}}

=== Make an AROME forecast coupled to coarse resolution ALADIN run ===

 * The following shell variables should be set in {{{Env_expdesc}}}:
{{{
 EXP=<your_exp>
 BDLIB=<name_of_existing_11km_experiment>
 TSTEP=60
 FLAG=arome
 HOST_MODEL=ald
 TRGT_MODEL=aro
 DOMAIN=<your_arome_2.5km_domain>
}}}
 * Note that you are likely to need editing of Run_harmonie script to choose appropriate resource request such as number of node, task per node and memory limit etc.
== Standalone Local Install ==
A preliminary [wiki:HarmonieSystemDocumentation/LocalInstall32 instruction] is available.
== Technical aspects ==
=== Tested model version, domains, components and computer architecture ===
||computer platform || model domain || dynamics || physics || boundary || purpose || nr of nodes || task per node || time stepping || forecast /day || forecast length || forecast elapse time || reporter ||
|| ECMWF HPCE|| SCANDINAVIA 11km || Hydrostatic || ALADIN  || RCR ||  technical test || 1 || 31 || 30s || 1 || 24 h || 1047 s || Xiaohua Yang ||
|| ECMWF HPCE|| Denmark || Non-Hydrostatic || AROME  || ALADIN || technical test || 2 || 31 || 60s || 1 || 24 h || ?s || Xiaohua Yang ||
|| Toon's laptop [[FootNote(2 GHz AMD64, 512 Mbyte RAM)]] || 50x50x40, 2.5km || Non-Hydrostatic || AROME || HIRLAM (0.5d) || technical test || 1 || 1 || 60s || - || 24 h || 6000s || Toon Moene ||

[[FootNote]]

== Acknowledgement ==

Numerous HIRLAM staffs have contributed to development of HIRLAM components as featured in Harmonie-32h2. Among them, direct contribution from Ulf Andrae, Sami Niemela, Tomas Wilhelmsson, Bjarne Stig Andersen, Toon Moene, Bent Hansen
Sass, Mariano Hortal and Xiaohua Yang are acknowledged.

== References and documentation ==
 * Yessad, K., 2007: [http://www.cnrm.meteo.fr/gmapdoc/spip.php?article29 Basics about ARPEGE/IFS, ALADIN and AROME in the cycle 32T2 of ARPEGE/IFS]

----
[[Center(begin)]]
[[Color(red, Last modified on)]] [[LastModified]]
[[Center(end)]]
